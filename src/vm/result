mkdir -p build/devices
mkdir -p build/filesys
mkdir -p build/lib
mkdir -p build/lib/kernel
mkdir -p build/lib/user
mkdir -p build/tests/filesys/base
mkdir -p build/tests/userprog
mkdir -p build/tests/vm
mkdir -p build/threads
mkdir -p build/userprog
mkdir -p build/vm
cp ../Makefile.build build/Makefile
cd build && make check
make[1]: Entering directory `/home/pintos/pintos/src/vm/build'
gcc -m32 -E -nostdinc -I../.. -I../../lib -I../../lib/kernel -P ../../threads/kernel.lds.S > threads/kernel.lds.s
gcc -m32 -c ../../threads/start.S -o threads/start.o -Wa,--gstabs -nostdinc -I../.. -I../../lib -I../../lib/kernel -DUSERPROG -DFILESYS -DVM -MMD -MF threads/start.d
gcc -m32 -c ../../threads/init.c -o threads/init.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -DVM -MMD -MF threads/init.d
gcc -m32 -c ../../threads/thread.c -o threads/thread.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -DVM -MMD -MF threads/thread.d
gcc -m32 -c ../../threads/switch.S -o threads/switch.o -Wa,--gstabs -nostdinc -I../.. -I../../lib -I../../lib/kernel -DUSERPROG -DFILESYS -DVM -MMD -MF threads/switch.d
gcc -m32 -c ../../threads/interrupt.c -o threads/interrupt.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -DVM -MMD -MF threads/interrupt.d
gcc -m32 -c ../../threads/intr-stubs.S -o threads/intr-stubs.o -Wa,--gstabs -nostdinc -I../.. -I../../lib -I../../lib/kernel -DUSERPROG -DFILESYS -DVM -MMD -MF threads/intr-stubs.d
gcc -m32 -c ../../threads/synch.c -o threads/synch.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -DVM -MMD -MF threads/synch.d
gcc -m32 -c ../../threads/palloc.c -o threads/palloc.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -DVM -MMD -MF threads/palloc.d
gcc -m32 -c ../../threads/malloc.c -o threads/malloc.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -DVM -MMD -MF threads/malloc.d
gcc -m32 -c ../../devices/pit.c -o devices/pit.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -DVM -MMD -MF devices/pit.d
gcc -m32 -c ../../devices/timer.c -o devices/timer.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -DVM -MMD -MF devices/timer.d
gcc -m32 -c ../../devices/kbd.c -o devices/kbd.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -DVM -MMD -MF devices/kbd.d
gcc -m32 -c ../../devices/vga.c -o devices/vga.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -DVM -MMD -MF devices/vga.d
gcc -m32 -c ../../devices/serial.c -o devices/serial.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -DVM -MMD -MF devices/serial.d
gcc -m32 -c ../../devices/block.c -o devices/block.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -DVM -MMD -MF devices/block.d
gcc -m32 -c ../../devices/partition.c -o devices/partition.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -DVM -MMD -MF devices/partition.d
gcc -m32 -c ../../devices/ide.c -o devices/ide.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -DVM -MMD -MF devices/ide.d
gcc -m32 -c ../../devices/input.c -o devices/input.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -DVM -MMD -MF devices/input.d
gcc -m32 -c ../../devices/intq.c -o devices/intq.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -DVM -MMD -MF devices/intq.d
gcc -m32 -c ../../devices/rtc.c -o devices/rtc.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -DVM -MMD -MF devices/rtc.d
gcc -m32 -c ../../devices/shutdown.c -o devices/shutdown.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -DVM -MMD -MF devices/shutdown.d
gcc -m32 -c ../../devices/speaker.c -o devices/speaker.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -DVM -MMD -MF devices/speaker.d
gcc -m32 -c ../../lib/debug.c -o lib/debug.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -DVM -MMD -MF lib/debug.d
gcc -m32 -c ../../lib/random.c -o lib/random.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -DVM -MMD -MF lib/random.d
gcc -m32 -c ../../lib/stdio.c -o lib/stdio.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -DVM -MMD -MF lib/stdio.d
gcc -m32 -c ../../lib/stdlib.c -o lib/stdlib.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -DVM -MMD -MF lib/stdlib.d
gcc -m32 -c ../../lib/string.c -o lib/string.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -DVM -MMD -MF lib/string.d
gcc -m32 -c ../../lib/arithmetic.c -o lib/arithmetic.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -DVM -MMD -MF lib/arithmetic.d
gcc -m32 -c ../../lib/ustar.c -o lib/ustar.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -DVM -MMD -MF lib/ustar.d
gcc -m32 -c ../../lib/kernel/debug.c -o lib/kernel/debug.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -DVM -MMD -MF lib/kernel/debug.d
gcc -m32 -c ../../lib/kernel/list.c -o lib/kernel/list.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -DVM -MMD -MF lib/kernel/list.d
gcc -m32 -c ../../lib/kernel/bitmap.c -o lib/kernel/bitmap.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -DVM -MMD -MF lib/kernel/bitmap.d
gcc -m32 -c ../../lib/kernel/hash.c -o lib/kernel/hash.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -DVM -MMD -MF lib/kernel/hash.d
gcc -m32 -c ../../lib/kernel/console.c -o lib/kernel/console.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -DVM -MMD -MF lib/kernel/console.d
gcc -m32 -c ../../userprog/process.c -o userprog/process.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -DVM -MMD -MF userprog/process.d
gcc -m32 -c ../../userprog/pagedir.c -o userprog/pagedir.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -DVM -MMD -MF userprog/pagedir.d
gcc -m32 -c ../../userprog/exception.c -o userprog/exception.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -DVM -MMD -MF userprog/exception.d
gcc -m32 -c ../../userprog/syscall.c -o userprog/syscall.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -DVM -MMD -MF userprog/syscall.d
gcc -m32 -c ../../userprog/gdt.c -o userprog/gdt.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -DVM -MMD -MF userprog/gdt.d
gcc -m32 -c ../../userprog/tss.c -o userprog/tss.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -DVM -MMD -MF userprog/tss.d
gcc -m32 -c ../../filesys/filesys.c -o filesys/filesys.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -DVM -MMD -MF filesys/filesys.d
gcc -m32 -c ../../filesys/free-map.c -o filesys/free-map.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -DVM -MMD -MF filesys/free-map.d
gcc -m32 -c ../../filesys/file.c -o filesys/file.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -DVM -MMD -MF filesys/file.d
gcc -m32 -c ../../filesys/directory.c -o filesys/directory.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -DVM -MMD -MF filesys/directory.d
gcc -m32 -c ../../filesys/inode.c -o filesys/inode.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -DVM -MMD -MF filesys/inode.d
gcc -m32 -c ../../filesys/fsutil.c -o filesys/fsutil.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -DVM -MMD -MF filesys/fsutil.d
gcc -m32 -c ../../vm/page.c -o vm/page.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -DVM -MMD -MF vm/page.d
ld -melf_i386 -T threads/kernel.lds.s -o kernel.o threads/start.o threads/init.o threads/thread.o threads/switch.o threads/interrupt.o threads/intr-stubs.o threads/synch.o threads/palloc.o threads/malloc.o devices/pit.o devices/timer.o devices/kbd.o devices/vga.o devices/serial.o devices/block.o devices/partition.o devices/ide.o devices/input.o devices/intq.o devices/rtc.o devices/shutdown.o devices/speaker.o lib/debug.o lib/random.o lib/stdio.o lib/stdlib.o lib/string.o lib/arithmetic.o lib/ustar.o lib/kernel/debug.o lib/kernel/list.o lib/kernel/bitmap.o lib/kernel/hash.o lib/kernel/console.o userprog/process.o userprog/pagedir.o userprog/exception.o userprog/syscall.o userprog/gdt.o userprog/tss.o filesys/filesys.o filesys/free-map.o filesys/file.o filesys/directory.o filesys/inode.o filesys/fsutil.o vm/page.o
objcopy -R .note -R .comment -S kernel.o kernel.bin
gcc -m32 -c ../../threads/loader.S -o threads/loader.o -Wa,--gstabs -nostdinc -I../.. -I../../lib 
ld -melf_i386 -N -e 0 -Ttext 0x7c00 --oformat binary -o loader.bin threads/loader.o
gcc -m32 -c ../../tests/userprog/args.c -o tests/userprog/args.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/args.d
gcc -m32 -c ../../tests/lib.c -o tests/lib.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/lib.d
gcc -m32 -c ../../lib/user/entry.c -o lib/user/entry.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF lib/user/entry.d
gcc -m32 -c ../../lib/user/debug.c -o lib/user/debug.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF lib/user/debug.d
gcc -m32 -c ../../lib/user/syscall.c -o lib/user/syscall.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF lib/user/syscall.d
gcc -m32 -c ../../lib/user/console.c -o lib/user/console.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF lib/user/console.d
rm -f libc.a
ar r libc.a lib/debug.o lib/random.o lib/stdio.o lib/stdlib.o lib/string.o lib/arithmetic.o lib/ustar.o lib/user/debug.o lib/user/syscall.o lib/user/console.o
ranlib libc.a
gcc -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/args.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/args-none
pintos -v -k -T 120 --bochs  --filesys-size=2 -p tests/userprog/args-none -a args-none --swap-size=4 -- -q    -f run args-none < /dev/null 2> tests/userprog/args-none.errors |tee tests/userprog/args-none.output
Copying tests/userprog/args-none to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading.........
Kernel command line: -q -f extract run args-none
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 13,104 sectors (6 MB), model "BXHD00011", serial "Generic 1234"
hda1: 155 sectors (77 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 100 sectors (50 kB), Pintos scratch (22)
hda4: 8,192 sectors (4 MB), Pintos swap (23)
filesys: using hda2
scratch: using hda3
swap: using hda4
HI
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'args-none' into the file system...
Erasing ustar archive...
Executing 'args-none':
(args) begin
(args) argc = 1
(args) argv[0] = 'args-none'
(args) argv[1] = null
(args) end
args-none: exit(0)
Kernel PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c642 0xc00220e6 0xc002221f 0x804a2e9 0x8048764.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 294 ticks
Thread: 50 idle ticks, 203 kernel ticks, 41 user ticks
hda2 (filesys): 63 reads, 204 writes
hda3 (scratch): 99 reads, 2 writes
hda4 (swap): 0 reads, 0 writes
Console: 1489 characters output
Keyboard: 0 keys pressed
Exception: 5 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Aug 30 2016 at 19:39:55
========================================================================
perl -I../.. ../../tests/userprog/args-none.ck tests/userprog/args-none tests/userprog/args-none.result
FAIL tests/userprog/args-none
Kernel panic in run: PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c642 0xc00220e6 0xc002221f 0x804a2e9 0x8048764
Translation of call stack:
In kernel.o:
0xc0028cdc: debug_panic (.../../lib/kernel/debug.c:38)
0xc0023a87: block_to_arena (..../../threads/malloc.c:279)
0xc0023b87: free (..../../threads/malloc.c:224)
0xc002e7e4: vm_destory_func (.../build/../../vm/page.c:26)
0xc002a8dd: hash_clear (..../../lib/kernel/hash.c:63)
0xc002a928: hash_destroy (..../../lib/kernel/hash.c:91)
0xc002e7d1: vm_destroy (.../build/../../vm/page.c:65)
0xc002adc3: process_exit (...../userprog/process.c:274)
0xc00215a5: thread_exit (..../../threads/thread.c:334)
0xc002c4e7: create (...../userprog/syscall.c:177)
0xc002c642: syscall_handler (.../../userprog/syscall.c:42)
0xc00220e6: intr_handler (..../threads/interrupt.c:367)
0xc002221f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/args-none:
0x0804a2e9: exit (.../../lib/user/syscall.c:74)
0x08048764: random_init (...ild/../../lib/random.c:35)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
gcc -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/args.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/args-single
pintos -v -k -T 120 --bochs  --filesys-size=2 -p tests/userprog/args-single -a args-single --swap-size=4 -- -q    -f run 'args-single onearg' < /dev/null 2> tests/userprog/args-single.errors |tee tests/userprog/args-single.output
Copying tests/userprog/args-single to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading.........
Kernel command line: -q -f extract run 'args-single onearg'
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 13,104 sectors (6 MB), model "BXHD00011", serial "Generic 1234"
hda1: 155 sectors (77 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 100 sectors (50 kB), Pintos scratch (22)
hda4: 8,192 sectors (4 MB), Pintos swap (23)
filesys: using hda2
scratch: using hda3
swap: using hda4
HI
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'args-single' into the file system...
Erasing ustar archive...
Executing 'args-single onearg':
(args) begin
(args) argc = 2
(args) argv[0] = 'args-single'
(args) argv[1] = 'onearg'
(args) argv[2] = null
(args) end
args-single: exit(0)
Kernel PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c642 0xc00220e6 0xc002221f 0x804a2e9 0x8048764.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 300 ticks
Thread: 49 idle ticks, 205 kernel ticks, 46 user ticks
hda2 (filesys): 63 reads, 204 writes
hda3 (scratch): 99 reads, 2 writes
hda4 (swap): 0 reads, 0 writes
Console: 1541 characters output
Keyboard: 0 keys pressed
Exception: 5 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Aug 30 2016 at 19:39:55
========================================================================
perl -I../.. ../../tests/userprog/args-single.ck tests/userprog/args-single tests/userprog/args-single.result
FAIL tests/userprog/args-single
Kernel panic in run: PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c642 0xc00220e6 0xc002221f 0x804a2e9 0x8048764
Translation of call stack:
In kernel.o:
0xc0028cdc: debug_panic (.../../lib/kernel/debug.c:38)
0xc0023a87: block_to_arena (..../../threads/malloc.c:279)
0xc0023b87: free (..../../threads/malloc.c:224)
0xc002e7e4: vm_destory_func (.../build/../../vm/page.c:26)
0xc002a8dd: hash_clear (..../../lib/kernel/hash.c:63)
0xc002a928: hash_destroy (..../../lib/kernel/hash.c:91)
0xc002e7d1: vm_destroy (.../build/../../vm/page.c:65)
0xc002adc3: process_exit (...../userprog/process.c:274)
0xc00215a5: thread_exit (..../../threads/thread.c:334)
0xc002c4e7: create (...../userprog/syscall.c:177)
0xc002c642: syscall_handler (.../../userprog/syscall.c:42)
0xc00220e6: intr_handler (..../threads/interrupt.c:367)
0xc002221f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/args-single:
0x0804a2e9: exit (.../../lib/user/syscall.c:74)
0x08048764: random_init (...ild/../../lib/random.c:35)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
gcc -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/args.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/args-multiple
pintos -v -k -T 120 --bochs  --filesys-size=2 -p tests/userprog/args-multiple -a args-multiple --swap-size=4 -- -q    -f run 'args-multiple some arguments for you!' < /dev/null 2> tests/userprog/args-multiple.errors |tee tests/userprog/args-multiple.output
Copying tests/userprog/args-multiple to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading.........
Kernel command line: -q -f extract run 'args-multiple some arguments for you!'
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 13,104 sectors (6 MB), model "BXHD00011", serial "Generic 1234"
hda1: 155 sectors (77 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 100 sectors (50 kB), Pintos scratch (22)
hda4: 8,192 sectors (4 MB), Pintos swap (23)
filesys: using hda2
scratch: using hda3
swap: using hda4
HI
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'args-multiple' into the file system...
Erasing ustar archive...
Executing 'args-multiple some arguments for you!':
(args) begin
(args) argc = 5
(args) argv[0] = 'args-multiple'
(args) argv[1] = 'some'
(args) argv[2] = 'arguments'
(args) argv[3] = 'for'
(args) argv[4] = 'you!'
(args) argv[5] = null
(args) end
args-multiple: exit(0)
Kernel PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c642 0xc00220e6 0xc002221f 0x804a2e9 0x8048764.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 315 ticks
Thread: 50 idle ticks, 207 kernel ticks, 58 user ticks
hda2 (filesys): 63 reads, 204 writes
hda3 (scratch): 99 reads, 2 writes
hda4 (swap): 0 reads, 0 writes
Console: 1659 characters output
Keyboard: 0 keys pressed
Exception: 5 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Aug 30 2016 at 19:39:55
========================================================================
perl -I../.. ../../tests/userprog/args-multiple.ck tests/userprog/args-multiple tests/userprog/args-multiple.result
FAIL tests/userprog/args-multiple
Kernel panic in run: PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c642 0xc00220e6 0xc002221f 0x804a2e9 0x8048764
Translation of call stack:
In kernel.o:
0xc0028cdc: debug_panic (.../../lib/kernel/debug.c:38)
0xc0023a87: block_to_arena (..../../threads/malloc.c:279)
0xc0023b87: free (..../../threads/malloc.c:224)
0xc002e7e4: vm_destory_func (.../build/../../vm/page.c:26)
0xc002a8dd: hash_clear (..../../lib/kernel/hash.c:63)
0xc002a928: hash_destroy (..../../lib/kernel/hash.c:91)
0xc002e7d1: vm_destroy (.../build/../../vm/page.c:65)
0xc002adc3: process_exit (...../userprog/process.c:274)
0xc00215a5: thread_exit (..../../threads/thread.c:334)
0xc002c4e7: create (...../userprog/syscall.c:177)
0xc002c642: syscall_handler (.../../userprog/syscall.c:42)
0xc00220e6: intr_handler (..../threads/interrupt.c:367)
0xc002221f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/args-multiple:
0x0804a2e9: exit (.../../lib/user/syscall.c:74)
0x08048764: random_init (...ild/../../lib/random.c:35)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
gcc -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/args.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/args-many
pintos -v -k -T 120 --bochs  --filesys-size=2 -p tests/userprog/args-many -a args-many --swap-size=4 -- -q    -f run 'args-many a b c d e f g h i j k l m n o p q r s t u v' < /dev/null 2> tests/userprog/args-many.errors |tee tests/userprog/args-many.output
Copying tests/userprog/args-many to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading.........
Kernel command line: -q -f extract run 'args-many a b c d e f g h i j k l m n o p q r s t u v'
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 13,104 sectors (6 MB), model "BXHD00011", serial "Generic 1234"
hda1: 155 sectors (77 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 100 sectors (50 kB), Pintos scratch (22)
hda4: 8,192 sectors (4 MB), Pintos swap (23)
filesys: using hda2
scratch: using hda3
swap: using hda4
HI
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'args-many' into the file system...
Erasing ustar archive...
Executing 'args-many a b c d e f g h i j k l m n o p q r s t u v':
(args) begin
(args) argc = 23
(args) argv[0] = 'args-many'
(args) argv[1] = 'a'
(args) argv[2] = 'b'
(args) argv[3] = 'c'
(args) argv[4] = 'd'
(args) argv[5] = 'e'
(args) argv[6] = 'f'
(args) argv[7] = 'g'
(args) argv[8] = 'h'
(args) argv[9] = 'i'
(args) argv[10] = 'j'
(args) argv[11] = 'k'
(args) argv[12] = 'l'
(args) argv[13] = 'm'
(args) argv[14] = 'n'
(args) argv[15] = 'o'
(args) argv[16] = 'p'
(args) argv[17] = 'q'
(args) argv[18] = 'r'
(args) argv[19] = 's'
(args) argv[20] = 't'
(args) argv[21] = 'u'
(args) argv[22] = 'v'
(args) argv[23] = null
(args) end
args-many: exit(0)
Kernel PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c642 0xc00220e6 0xc002221f 0x804a2e9 0x8048764.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 379 ticks
Thread: 50 idle ticks, 208 kernel ticks, 121 user ticks
hda2 (filesys): 63 reads, 204 writes
hda3 (scratch): 99 reads, 2 writes
hda4 (swap): 0 reads, 0 writes
Console: 2057 characters output
Keyboard: 0 keys pressed
Exception: 5 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Aug 30 2016 at 19:39:55
========================================================================
perl -I../.. ../../tests/userprog/args-many.ck tests/userprog/args-many tests/userprog/args-many.result
FAIL tests/userprog/args-many
Kernel panic in run: PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c642 0xc00220e6 0xc002221f 0x804a2e9 0x8048764
Translation of call stack:
In kernel.o:
0xc0028cdc: debug_panic (.../../lib/kernel/debug.c:38)
0xc0023a87: block_to_arena (..../../threads/malloc.c:279)
0xc0023b87: free (..../../threads/malloc.c:224)
0xc002e7e4: vm_destory_func (.../build/../../vm/page.c:26)
0xc002a8dd: hash_clear (..../../lib/kernel/hash.c:63)
0xc002a928: hash_destroy (..../../lib/kernel/hash.c:91)
0xc002e7d1: vm_destroy (.../build/../../vm/page.c:65)
0xc002adc3: process_exit (...../userprog/process.c:274)
0xc00215a5: thread_exit (..../../threads/thread.c:334)
0xc002c4e7: create (...../userprog/syscall.c:177)
0xc002c642: syscall_handler (.../../userprog/syscall.c:42)
0xc00220e6: intr_handler (..../threads/interrupt.c:367)
0xc002221f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/args-many:
0x0804a2e9: exit (.../../lib/user/syscall.c:74)
0x08048764: random_init (...ild/../../lib/random.c:35)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
gcc -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/args.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/args-dbl-space
pintos -v -k -T 120 --bochs  --filesys-size=2 -p tests/userprog/args-dbl-space -a args-dbl-space --swap-size=4 -- -q    -f run 'args-dbl-space two  spaces!' < /dev/null 2> tests/userprog/args-dbl-space.errors |tee tests/userprog/args-dbl-space.output
Copying tests/userprog/args-dbl-space to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading.........
Kernel command line: -q -f extract run 'args-dbl-space two  spaces!'
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 13,104 sectors (6 MB), model "BXHD00011", serial "Generic 1234"
hda1: 155 sectors (77 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 100 sectors (50 kB), Pintos scratch (22)
hda4: 8,192 sectors (4 MB), Pintos swap (23)
filesys: using hda2
scratch: using hda3
swap: using hda4
HI
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'args-dbl-space' into the file system...
Erasing ustar archive...
Executing 'args-dbl-space two  spaces!':
(args) begin
(args) argc = 3
(args) argv[0] = 'args-dbl-space'
(args) argv[1] = 'two'
(args) argv[2] = 'spaces!'
(args) argv[3] = null
(args) end
args-dbl-space: exit(0)
Kernel PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c642 0xc00220e6 0xc002221f 0x804a2e9 0x8048764.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 306 ticks
Thread: 50 idle ticks, 206 kernel ticks, 50 user ticks
hda2 (filesys): 63 reads, 204 writes
hda3 (scratch): 99 reads, 2 writes
hda4 (swap): 0 reads, 0 writes
Console: 1592 characters output
Keyboard: 0 keys pressed
Exception: 5 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Aug 30 2016 at 19:39:55
========================================================================
perl -I../.. ../../tests/userprog/args-dbl-space.ck tests/userprog/args-dbl-space tests/userprog/args-dbl-space.result
FAIL tests/userprog/args-dbl-space
Kernel panic in run: PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c642 0xc00220e6 0xc002221f 0x804a2e9 0x8048764
Translation of call stack:
In kernel.o:
0xc0028cdc: debug_panic (.../../lib/kernel/debug.c:38)
0xc0023a87: block_to_arena (..../../threads/malloc.c:279)
0xc0023b87: free (..../../threads/malloc.c:224)
0xc002e7e4: vm_destory_func (.../build/../../vm/page.c:26)
0xc002a8dd: hash_clear (..../../lib/kernel/hash.c:63)
0xc002a928: hash_destroy (..../../lib/kernel/hash.c:91)
0xc002e7d1: vm_destroy (.../build/../../vm/page.c:65)
0xc002adc3: process_exit (...../userprog/process.c:274)
0xc00215a5: thread_exit (..../../threads/thread.c:334)
0xc002c4e7: create (...../userprog/syscall.c:177)
0xc002c642: syscall_handler (.../../userprog/syscall.c:42)
0xc00220e6: intr_handler (..../threads/interrupt.c:367)
0xc002221f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/args-dbl-space:
0x0804a2e9: exit (.../../lib/user/syscall.c:74)
0x08048764: random_init (...ild/../../lib/random.c:35)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
gcc -m32 -c ../../tests/userprog/sc-bad-sp.c -o tests/userprog/sc-bad-sp.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/sc-bad-sp.d
gcc -m32 -c ../../tests/main.c -o tests/main.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/main.d
gcc -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/sc-bad-sp.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/sc-bad-sp
pintos -v -k -T 120 --bochs  --filesys-size=2 -p tests/userprog/sc-bad-sp -a sc-bad-sp --swap-size=4 -- -q    -f run sc-bad-sp < /dev/null 2> tests/userprog/sc-bad-sp.errors |tee tests/userprog/sc-bad-sp.output
Copying tests/userprog/sc-bad-sp to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading.........
Kernel command line: -q -f extract run sc-bad-sp
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 13,104 sectors (6 MB), model "BXHD00011", serial "Generic 1234"
hda1: 155 sectors (77 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 100 sectors (50 kB), Pintos scratch (22)
hda4: 8,192 sectors (4 MB), Pintos swap (23)
filesys: using hda2
scratch: using hda3
swap: using hda4
HI
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'sc-bad-sp' into the file system...
Erasing ustar archive...
Executing 'sc-bad-sp':
(sc-bad-sp) begin
========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Aug 30 2016 at 19:39:55
========================================================================

TIMEOUT after 121 seconds of wall-clock time - load average: 1.04, 0.77, 0.45
perl -I../.. ../../tests/userprog/sc-bad-sp.ck tests/userprog/sc-bad-sp tests/userprog/sc-bad-sp.result
FAIL tests/userprog/sc-bad-sp
run: TIMEOUT after 121 seconds of wall-clock time - load average: 1.04, 0.77, 0.45
gcc -m32 -c ../../tests/userprog/sc-bad-arg.c -o tests/userprog/sc-bad-arg.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/sc-bad-arg.d
gcc -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/sc-bad-arg.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/sc-bad-arg
pintos -v -k -T 120 --bochs  --filesys-size=2 -p tests/userprog/sc-bad-arg -a sc-bad-arg --swap-size=4 -- -q    -f run sc-bad-arg < /dev/null 2> tests/userprog/sc-bad-arg.errors |tee tests/userprog/sc-bad-arg.output
Copying tests/userprog/sc-bad-arg to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading.........
Kernel command line: -q -f extract run sc-bad-arg
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 13,104 sectors (6 MB), model "BXHD00011", serial "Generic 1234"
hda1: 155 sectors (77 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 101 sectors (50 kB), Pintos scratch (22)
hda4: 8,192 sectors (4 MB), Pintos swap (23)
filesys: using hda2
scratch: using hda3
swap: using hda4
HI
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'sc-bad-arg' into the file system...
Erasing ustar archive...
Executing 'sc-bad-arg':
(sc-bad-arg) begin
sc-bad-arg: exit(-268370093)
Kernel PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c642 0xc00220e6 0xc002221f 0x80480b4 0x80480f0 0x804873c.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 284 ticks
Thread: 50 idle ticks, 204 kernel ticks, 30 user ticks
hda2 (filesys): 63 reads, 206 writes
hda3 (scratch): 100 reads, 2 writes
hda4 (swap): 0 reads, 0 writes
Console: 1441 characters output
Keyboard: 0 keys pressed
Exception: 5 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Aug 30 2016 at 19:39:55
========================================================================
perl -I../.. ../../tests/userprog/sc-bad-arg.ck tests/userprog/sc-bad-arg tests/userprog/sc-bad-arg.result
FAIL tests/userprog/sc-bad-arg
Kernel panic in run: PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c642 0xc00220e6 0xc002221f 0x80480b4 0x80480f0 0x804873c
Translation of call stack:
In kernel.o:
0xc0028cdc: debug_panic (.../../lib/kernel/debug.c:38)
0xc0023a87: block_to_arena (..../../threads/malloc.c:279)
0xc0023b87: free (..../../threads/malloc.c:224)
0xc002e7e4: vm_destory_func (.../build/../../vm/page.c:26)
0xc002a8dd: hash_clear (..../../lib/kernel/hash.c:63)
0xc002a928: hash_destroy (..../../lib/kernel/hash.c:91)
0xc002e7d1: vm_destroy (.../build/../../vm/page.c:65)
0xc002adc3: process_exit (...../userprog/process.c:274)
0xc00215a5: thread_exit (..../../threads/thread.c:334)
0xc002c4e7: create (...../userprog/syscall.c:177)
0xc002c642: syscall_handler (.../../userprog/syscall.c:42)
0xc00220e6: intr_handler (..../threads/interrupt.c:367)
0xc002221f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/sc-bad-arg:
0x080480b4: test_main (.../userprog/sc-bad-arg.c:16)
0x080480f0: main (...ild/../../tests/main.c:13)
0x0804873c: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
gcc -m32 -c ../../tests/userprog/sc-boundary.c -o tests/userprog/sc-boundary.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/sc-boundary.d
gcc -m32 -c ../../tests/userprog/boundary.c -o tests/userprog/boundary.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/boundary.d
gcc -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/sc-boundary.o tests/userprog/boundary.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/sc-boundary
pintos -v -k -T 120 --bochs  --filesys-size=2 -p tests/userprog/sc-boundary -a sc-boundary --swap-size=4 -- -q    -f run sc-boundary < /dev/null 2> tests/userprog/sc-boundary.errors |tee tests/userprog/sc-boundary.output
Copying tests/userprog/sc-boundary to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading.........
Kernel command line: -q -f extract run sc-boundary
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 13,104 sectors (6 MB), model "BXHD00011", serial "Generic 1234"
hda1: 155 sectors (77 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 103 sectors (51 kB), Pintos scratch (22)
hda4: 8,192 sectors (4 MB), Pintos swap (23)
filesys: using hda2
scratch: using hda3
swap: using hda4
HI
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'sc-boundary' into the file system...
Erasing ustar archive...
Executing 'sc-boundary':
(sc-boundary) begin
sc-boundary: exit(42)
Kernel PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c642 0xc00220e6 0xc002221f 0x80480be 0x8048188 0x80487cc.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 284 ticks
Thread: 50 idle ticks, 206 kernel ticks, 28 user ticks
hda2 (filesys): 56 reads, 210 writes
hda3 (scratch): 102 reads, 2 writes
hda4 (swap): 0 reads, 0 writes
Console: 1438 characters output
Keyboard: 0 keys pressed
Exception: 6 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Aug 30 2016 at 19:39:55
========================================================================
perl -I../.. ../../tests/userprog/sc-boundary.ck tests/userprog/sc-boundary tests/userprog/sc-boundary.result
FAIL tests/userprog/sc-boundary
Kernel panic in run: PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c642 0xc00220e6 0xc002221f 0x80480be 0x8048188 0x80487cc
Translation of call stack:
In kernel.o:
0xc0028cdc: debug_panic (.../../lib/kernel/debug.c:38)
0xc0023a87: block_to_arena (..../../threads/malloc.c:279)
0xc0023b87: free (..../../threads/malloc.c:224)
0xc002e7e4: vm_destory_func (.../build/../../vm/page.c:26)
0xc002a8dd: hash_clear (..../../lib/kernel/hash.c:63)
0xc002a928: hash_destroy (..../../lib/kernel/hash.c:91)
0xc002e7d1: vm_destroy (.../build/../../vm/page.c:65)
0xc002adc3: process_exit (...../userprog/process.c:274)
0xc00215a5: thread_exit (..../../threads/thread.c:334)
0xc002c4e7: create (...../userprog/syscall.c:177)
0xc002c642: syscall_handler (.../../userprog/syscall.c:42)
0xc00220e6: intr_handler (..../threads/interrupt.c:367)
0xc002221f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/sc-boundary:
0x080480be: test_main (...userprog/sc-boundary.c:21)
0x08048188: main (...ild/../../tests/main.c:13)
0x080487cc: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
gcc -m32 -c ../../tests/userprog/sc-boundary-2.c -o tests/userprog/sc-boundary-2.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/sc-boundary-2.d
gcc -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/sc-boundary-2.o tests/userprog/boundary.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/sc-boundary-2
pintos -v -k -T 120 --bochs  --filesys-size=2 -p tests/userprog/sc-boundary-2 -a sc-boundary-2 --swap-size=4 -- -q    -f run sc-boundary-2 < /dev/null 2> tests/userprog/sc-boundary-2.errors |tee tests/userprog/sc-boundary-2.output
Copying tests/userprog/sc-boundary-2 to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading.........
Kernel command line: -q -f extract run sc-boundary-2
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 13,104 sectors (6 MB), model "BXHD00011", serial "Generic 1234"
hda1: 155 sectors (77 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 103 sectors (51 kB), Pintos scratch (22)
hda4: 8,192 sectors (4 MB), Pintos swap (23)
filesys: using hda2
scratch: using hda3
swap: using hda4
HI
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'sc-boundary-2' into the file system...
Erasing ustar archive...
Executing 'sc-boundary-2':
(sc-boundary-2) begin
sc-boundary-2: exit(67)
Kernel PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c642 0xc00220e6 0xc002221f 0x80480bf 0x8048188 0x80487cc.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 285 ticks
Thread: 49 idle ticks, 207 kernel ticks, 29 user ticks
hda2 (filesys): 56 reads, 210 writes
hda3 (scratch): 102 reads, 2 writes
hda4 (swap): 0 reads, 0 writes
Console: 1448 characters output
Keyboard: 0 keys pressed
Exception: 6 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Aug 30 2016 at 19:39:55
========================================================================
perl -I../.. ../../tests/userprog/sc-boundary-2.ck tests/userprog/sc-boundary-2 tests/userprog/sc-boundary-2.result
FAIL tests/userprog/sc-boundary-2
Kernel panic in run: PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c642 0xc00220e6 0xc002221f 0x80480bf 0x8048188 0x80487cc
Translation of call stack:
In kernel.o:
0xc0028cdc: debug_panic (.../../lib/kernel/debug.c:38)
0xc0023a87: block_to_arena (..../../threads/malloc.c:279)
0xc0023b87: free (..../../threads/malloc.c:224)
0xc002e7e4: vm_destory_func (.../build/../../vm/page.c:26)
0xc002a8dd: hash_clear (..../../lib/kernel/hash.c:63)
0xc002a928: hash_destroy (..../../lib/kernel/hash.c:91)
0xc002e7d1: vm_destroy (.../build/../../vm/page.c:65)
0xc002adc3: process_exit (...../userprog/process.c:274)
0xc00215a5: thread_exit (..../../threads/thread.c:334)
0xc002c4e7: create (...../userprog/syscall.c:177)
0xc002c642: syscall_handler (.../../userprog/syscall.c:42)
0xc00220e6: intr_handler (..../threads/interrupt.c:367)
0xc002221f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/sc-boundary-2:
0x080480bf: test_main (...erprog/sc-boundary-2.c:21)
0x08048188: main (...ild/../../tests/main.c:13)
0x080487cc: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
gcc -m32 -c ../../tests/userprog/halt.c -o tests/userprog/halt.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/halt.d
gcc -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/halt.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/halt
pintos -v -k -T 120 --bochs  --filesys-size=2 -p tests/userprog/halt -a halt --swap-size=4 -- -q    -f run halt < /dev/null 2> tests/userprog/halt.errors |tee tests/userprog/halt.output
Copying tests/userprog/halt to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading.........
Kernel command line: -q -f extract run halt
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 13,104 sectors (6 MB), model "BXHD00011", serial "Generic 1234"
hda1: 155 sectors (77 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 100 sectors (50 kB), Pintos scratch (22)
hda4: 8,192 sectors (4 MB), Pintos swap (23)
filesys: using hda2
scratch: using hda3
swap: using hda4
HI
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'halt' into the file system...
Erasing ustar archive...
Executing 'halt':
(halt) begin
Timer: 275 ticks
Thread: 51 idle ticks, 201 kernel ticks, 26 user ticks
hda2 (filesys): 62 reads, 204 writes
hda3 (scratch): 99 reads, 2 writes
hda4 (swap): 0 reads, 0 writes
Console: 892 characters output
Keyboard: 0 keys pressed
Exception: 5 page faults
Powering off...
========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Aug 30 2016 at 19:39:55
========================================================================
perl -I../.. ../../tests/userprog/halt.ck tests/userprog/halt tests/userprog/halt.result
pass tests/userprog/halt
gcc -m32 -c ../../tests/userprog/exit.c -o tests/userprog/exit.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/exit.d
gcc -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/exit.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/exit
pintos -v -k -T 120 --bochs  --filesys-size=2 -p tests/userprog/exit -a exit --swap-size=4 -- -q    -f run exit < /dev/null 2> tests/userprog/exit.errors |tee tests/userprog/exit.output
Copying tests/userprog/exit to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading.........
Kernel command line: -q -f extract run exit
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 13,104 sectors (6 MB), model "BXHD00011", serial "Generic 1234"
hda1: 155 sectors (77 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 100 sectors (50 kB), Pintos scratch (22)
hda4: 8,192 sectors (4 MB), Pintos swap (23)
filesys: using hda2
scratch: using hda3
swap: using hda4
HI
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'exit' into the file system...
Erasing ustar archive...
Executing 'exit':
(exit) begin
exit: exit(57)
Kernel PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c642 0xc00220e6 0xc002221f 0x804a2b9 0x80480b2 0x80480e4 0x804872c.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 280 ticks
Thread: 51 idle ticks, 201 kernel ticks, 28 user ticks
hda2 (filesys): 62 reads, 204 writes
hda3 (scratch): 99 reads, 2 writes
hda4 (swap): 0 reads, 0 writes
Console: 1412 characters output
Keyboard: 0 keys pressed
Exception: 5 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Aug 30 2016 at 19:39:55
========================================================================
perl -I../.. ../../tests/userprog/exit.ck tests/userprog/exit tests/userprog/exit.result
FAIL tests/userprog/exit
Kernel panic in run: PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c642 0xc00220e6 0xc002221f 0x804a2b9 0x80480b2 0x80480e4 0x804872c
Translation of call stack:
In kernel.o:
0xc0028cdc: debug_panic (.../../lib/kernel/debug.c:38)
0xc0023a87: block_to_arena (..../../threads/malloc.c:279)
0xc0023b87: free (..../../threads/malloc.c:224)
0xc002e7e4: vm_destory_func (.../build/../../vm/page.c:26)
0xc002a8dd: hash_clear (..../../lib/kernel/hash.c:63)
0xc002a928: hash_destroy (..../../lib/kernel/hash.c:91)
0xc002e7d1: vm_destroy (.../build/../../vm/page.c:65)
0xc002adc3: process_exit (...../userprog/process.c:274)
0xc00215a5: thread_exit (..../../threads/thread.c:334)
0xc002c4e7: create (...../userprog/syscall.c:177)
0xc002c642: syscall_handler (.../../userprog/syscall.c:42)
0xc00220e6: intr_handler (..../threads/interrupt.c:367)
0xc002221f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/exit:
0x0804a2b9: exit (.../../lib/user/syscall.c:74)
0x080480b2: test_main (??:0)
0x080480e4: main (...ild/../../tests/main.c:13)
0x0804872c: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
gcc -m32 -c ../../tests/userprog/create-normal.c -o tests/userprog/create-normal.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/create-normal.d
gcc -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/create-normal.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/create-normal
pintos -v -k -T 120 --bochs  --filesys-size=2 -p tests/userprog/create-normal -a create-normal --swap-size=4 -- -q    -f run create-normal < /dev/null 2> tests/userprog/create-normal.errors |tee tests/userprog/create-normal.output
Copying tests/userprog/create-normal to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading.........
Kernel command line: -q -f extract run create-normal
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 13,104 sectors (6 MB), model "BXHD00011", serial "Generic 1234"
hda1: 155 sectors (77 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 100 sectors (50 kB), Pintos scratch (22)
hda4: 8,192 sectors (4 MB), Pintos swap (23)
filesys: using hda2
scratch: using hda3
swap: using hda4
HI
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'create-normal' into the file system...
Erasing ustar archive...
Executing 'create-normal':
(create-normal) begin
(create-normal) create quux.dat
(create-normal) end
create-normal: exit(0)
Kernel PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c642 0xc00220e6 0xc002221f 0x804a2d9 0x8048754.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 305 ticks
Thread: 50 idle ticks, 204 kernel ticks, 51 user ticks
hda2 (filesys): 83 reads, 208 writes
hda3 (scratch): 99 reads, 2 writes
hda4 (swap): 0 reads, 0 writes
Console: 1488 characters output
Keyboard: 0 keys pressed
Exception: 5 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Aug 30 2016 at 19:39:55
========================================================================
perl -I../.. ../../tests/userprog/create-normal.ck tests/userprog/create-normal tests/userprog/create-normal.result
FAIL tests/userprog/create-normal
Kernel panic in run: PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c642 0xc00220e6 0xc002221f 0x804a2d9 0x8048754
Translation of call stack:
In kernel.o:
0xc0028cdc: debug_panic (.../../lib/kernel/debug.c:38)
0xc0023a87: block_to_arena (..../../threads/malloc.c:279)
0xc0023b87: free (..../../threads/malloc.c:224)
0xc002e7e4: vm_destory_func (.../build/../../vm/page.c:26)
0xc002a8dd: hash_clear (..../../lib/kernel/hash.c:63)
0xc002a928: hash_destroy (..../../lib/kernel/hash.c:91)
0xc002e7d1: vm_destroy (.../build/../../vm/page.c:65)
0xc002adc3: process_exit (...../userprog/process.c:274)
0xc00215a5: thread_exit (..../../threads/thread.c:334)
0xc002c4e7: create (...../userprog/syscall.c:177)
0xc002c642: syscall_handler (.../../userprog/syscall.c:42)
0xc00220e6: intr_handler (..../threads/interrupt.c:367)
0xc002221f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/create-normal:
0x0804a2d9: exit (.../../lib/user/syscall.c:74)
0x08048754: random_init (...ild/../../lib/random.c:35)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
gcc -m32 -c ../../tests/userprog/create-empty.c -o tests/userprog/create-empty.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/create-empty.d
gcc -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/create-empty.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/create-empty
pintos -v -k -T 120 --bochs  --filesys-size=2 -p tests/userprog/create-empty -a create-empty --swap-size=4 -- -q    -f run create-empty < /dev/null 2> tests/userprog/create-empty.errors |tee tests/userprog/create-empty.output
Copying tests/userprog/create-empty to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading.........
Kernel command line: -q -f extract run create-empty
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 13,104 sectors (6 MB), model "BXHD00011", serial "Generic 1234"
hda1: 155 sectors (77 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 100 sectors (50 kB), Pintos scratch (22)
hda4: 8,192 sectors (4 MB), Pintos swap (23)
filesys: using hda2
scratch: using hda3
swap: using hda4
HI
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'create-empty' into the file system...
Erasing ustar archive...
Executing 'create-empty':
(create-empty) begin
(create-empty) create(""): 0
(create-empty) end
create-empty: exit(0)
Kernel PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c642 0xc00220e6 0xc002221f 0x804a2d9 0x8048754.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 294 ticks
Thread: 49 idle ticks, 205 kernel ticks, 40 user ticks
hda2 (filesys): 64 reads, 208 writes
hda3 (scratch): 99 reads, 2 writes
hda4 (swap): 0 reads, 0 writes
Console: 1479 characters output
Keyboard: 0 keys pressed
Exception: 5 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Aug 30 2016 at 19:39:55
========================================================================
perl -I../.. ../../tests/userprog/create-empty.ck tests/userprog/create-empty tests/userprog/create-empty.result
FAIL tests/userprog/create-empty
Kernel panic in run: PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c642 0xc00220e6 0xc002221f 0x804a2d9 0x8048754
Translation of call stack:
In kernel.o:
0xc0028cdc: debug_panic (.../../lib/kernel/debug.c:38)
0xc0023a87: block_to_arena (..../../threads/malloc.c:279)
0xc0023b87: free (..../../threads/malloc.c:224)
0xc002e7e4: vm_destory_func (.../build/../../vm/page.c:26)
0xc002a8dd: hash_clear (..../../lib/kernel/hash.c:63)
0xc002a928: hash_destroy (..../../lib/kernel/hash.c:91)
0xc002e7d1: vm_destroy (.../build/../../vm/page.c:65)
0xc002adc3: process_exit (...../userprog/process.c:274)
0xc00215a5: thread_exit (..../../threads/thread.c:334)
0xc002c4e7: create (...../userprog/syscall.c:177)
0xc002c642: syscall_handler (.../../userprog/syscall.c:42)
0xc00220e6: intr_handler (..../threads/interrupt.c:367)
0xc002221f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/create-empty:
0x0804a2d9: exit (.../../lib/user/syscall.c:74)
0x08048754: random_init (...ild/../../lib/random.c:35)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
gcc -m32 -c ../../tests/userprog/create-null.c -o tests/userprog/create-null.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/create-null.d
gcc -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/create-null.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/create-null
pintos -v -k -T 120 --bochs  --filesys-size=2 -p tests/userprog/create-null -a create-null --swap-size=4 -- -q    -f run create-null < /dev/null 2> tests/userprog/create-null.errors |tee tests/userprog/create-null.output
Copying tests/userprog/create-null to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading.........
Kernel command line: -q -f extract run create-null
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 13,104 sectors (6 MB), model "BXHD00011", serial "Generic 1234"
hda1: 155 sectors (77 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 100 sectors (50 kB), Pintos scratch (22)
hda4: 8,192 sectors (4 MB), Pintos swap (23)
filesys: using hda2
scratch: using hda3
swap: using hda4
HI
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'create-null' into the file system...
Erasing ustar archive...
Executing 'create-null':
(create-null) begin
create-null: exit(-1)
Kernel PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c500 0xc002c66e 0xc00220e6 0xc002221f 0x804a1b3 0x80480ba 0x8048100 0x804874c.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 283 ticks
Thread: 49 idle ticks, 204 kernel ticks, 30 user ticks
hda2 (filesys): 63 reads, 204 writes
hda3 (scratch): 99 reads, 2 writes
hda4 (swap): 0 reads, 0 writes
Console: 1458 characters output
Keyboard: 0 keys pressed
Exception: 5 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Aug 30 2016 at 19:39:55
========================================================================
perl -I../.. ../../tests/userprog/create-null.ck tests/userprog/create-null tests/userprog/create-null.result
FAIL tests/userprog/create-null
Kernel panic in run: PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c500 0xc002c66e 0xc00220e6 0xc002221f 0x804a1b3 0x80480ba 0x8048100 0x804874c
Translation of call stack:
In kernel.o:
0xc0028cdc: debug_panic (.../../lib/kernel/debug.c:38)
0xc0023a87: block_to_arena (..../../threads/malloc.c:279)
0xc0023b87: free (..../../threads/malloc.c:224)
0xc002e7e4: vm_destory_func (.../build/../../vm/page.c:26)
0xc002a8dd: hash_clear (..../../lib/kernel/hash.c:63)
0xc002a928: hash_destroy (..../../lib/kernel/hash.c:91)
0xc002e7d1: vm_destroy (.../build/../../vm/page.c:65)
0xc002adc3: process_exit (...../userprog/process.c:274)
0xc00215a5: thread_exit (..../../threads/thread.c:334)
0xc002c4e7: create (...../userprog/syscall.c:177)
0xc002c500: create (...../userprog/syscall.c:180)
0xc002c66e: syscall_handler (.../../userprog/syscall.c:43)
0xc00220e6: intr_handler (..../threads/interrupt.c:367)
0xc002221f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/create-null:
0x0804a1b3: create (.../../lib/user/syscall.c:93)
0x080480ba: test_main (...userprog/create-null.c:10)
0x08048100: main (...ild/../../tests/main.c:13)
0x0804874c: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
gcc -m32 -c ../../tests/userprog/create-bad-ptr.c -o tests/userprog/create-bad-ptr.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/create-bad-ptr.d
gcc -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/create-bad-ptr.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/create-bad-ptr
pintos -v -k -T 120 --bochs  --filesys-size=2 -p tests/userprog/create-bad-ptr -a create-bad-ptr --swap-size=4 -- -q    -f run create-bad-ptr < /dev/null 2> tests/userprog/create-bad-ptr.errors |tee tests/userprog/create-bad-ptr.output
Copying tests/userprog/create-bad-ptr to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading.........
Kernel command line: -q -f extract run create-bad-ptr
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 13,104 sectors (6 MB), model "BXHD00011", serial "Generic 1234"
hda1: 155 sectors (77 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 100 sectors (50 kB), Pintos scratch (22)
hda4: 8,192 sectors (4 MB), Pintos swap (23)
filesys: using hda2
scratch: using hda3
swap: using hda4
HI
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'create-bad-ptr' into the file system...
Erasing ustar archive...
Executing 'create-bad-ptr':
(create-bad-ptr) begin

TIMEOUT after 120 seconds of host CPU time
perl -I../.. ../../tests/userprog/create-bad-ptr.ck tests/userprog/create-bad-ptr tests/userprog/create-bad-ptr.result
FAIL tests/userprog/create-bad-ptr
run: TIMEOUT after 120 seconds of host CPU time
gcc -m32 -c ../../tests/userprog/create-long.c -o tests/userprog/create-long.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/create-long.d
gcc -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/create-long.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/create-long
pintos -v -k -T 120 --bochs  --filesys-size=2 -p tests/userprog/create-long -a create-long --swap-size=4 -- -q    -f run create-long < /dev/null 2> tests/userprog/create-long.errors |tee tests/userprog/create-long.output
Copying tests/userprog/create-long to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading.........
Kernel command line: -q -f extract run create-long
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 13,104 sectors (6 MB), model "BXHD00011", serial "Generic 1234"
hda1: 155 sectors (77 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 101 sectors (50 kB), Pintos scratch (22)
hda4: 8,192 sectors (4 MB), Pintos swap (23)
filesys: using hda2
scratch: using hda3
swap: using hda4
HI
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'create-long' into the file system...
Erasing ustar archive...
Executing 'create-long':
(create-long) begin
(create-long) create("x..."): 0
(create-long) end
create-long: exit(0)
Kernel PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c642 0xc00220e6 0xc002221f 0x804a2e9 0x8048764.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 295 ticks
Thread: 51 idle ticks, 203 kernel ticks, 41 user ticks
hda2 (filesys): 64 reads, 210 writes
hda3 (scratch): 100 reads, 2 writes
hda4 (swap): 0 reads, 0 writes
Console: 1477 characters output
Keyboard: 0 keys pressed
Exception: 5 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Aug 30 2016 at 19:39:55
========================================================================
perl -I../.. ../../tests/userprog/create-long.ck tests/userprog/create-long tests/userprog/create-long.result
FAIL tests/userprog/create-long
Kernel panic in run: PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c642 0xc00220e6 0xc002221f 0x804a2e9 0x8048764
Translation of call stack:
In kernel.o:
0xc0028cdc: debug_panic (.../../lib/kernel/debug.c:38)
0xc0023a87: block_to_arena (..../../threads/malloc.c:279)
0xc0023b87: free (..../../threads/malloc.c:224)
0xc002e7e4: vm_destory_func (.../build/../../vm/page.c:26)
0xc002a8dd: hash_clear (..../../lib/kernel/hash.c:63)
0xc002a928: hash_destroy (..../../lib/kernel/hash.c:91)
0xc002e7d1: vm_destroy (.../build/../../vm/page.c:65)
0xc002adc3: process_exit (...../userprog/process.c:274)
0xc00215a5: thread_exit (..../../threads/thread.c:334)
0xc002c4e7: create (...../userprog/syscall.c:177)
0xc002c642: syscall_handler (.../../userprog/syscall.c:42)
0xc00220e6: intr_handler (..../threads/interrupt.c:367)
0xc002221f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/create-long:
0x0804a2e9: exit (.../../lib/user/syscall.c:74)
0x08048764: random_init (...ild/../../lib/random.c:35)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
gcc -m32 -c ../../tests/userprog/create-exists.c -o tests/userprog/create-exists.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/create-exists.d
gcc -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/create-exists.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/create-exists
pintos -v -k -T 120 --bochs  --filesys-size=2 -p tests/userprog/create-exists -a create-exists --swap-size=4 -- -q    -f run create-exists < /dev/null 2> tests/userprog/create-exists.errors |tee tests/userprog/create-exists.output
Copying tests/userprog/create-exists to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading.........
Kernel command line: -q -f extract run create-exists
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 13,104 sectors (6 MB), model "BXHD00011", serial "Generic 1234"
hda1: 155 sectors (77 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 101 sectors (50 kB), Pintos scratch (22)
hda4: 8,192 sectors (4 MB), Pintos swap (23)
filesys: using hda2
scratch: using hda3
swap: using hda4
HI
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'create-exists' into the file system...
Erasing ustar archive...
Executing 'create-exists':
(create-exists) begin
(create-exists) create quux.dat
(create-exists) create warble.dat
(create-exists) try to re-create quux.dat
(create-exists) create baffle.dat
(create-exists) try to re-create quux.dat
(create-exists) end
create-exists: exit(0)
Kernel PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c642 0xc00220e6 0xc002221f 0x804a399 0x8048814.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 363 ticks
Thread: 50 idle ticks, 204 kernel ticks, 109 user ticks
hda2 (filesys): 133 reads, 226 writes
hda3 (scratch): 100 reads, 2 writes
hda4 (swap): 0 reads, 0 writes
Console: 1643 characters output
Keyboard: 0 keys pressed
Exception: 5 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Aug 30 2016 at 19:39:55
========================================================================
perl -I../.. ../../tests/userprog/create-exists.ck tests/userprog/create-exists tests/userprog/create-exists.result
FAIL tests/userprog/create-exists
Kernel panic in run: PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c642 0xc00220e6 0xc002221f 0x804a399 0x8048814
Translation of call stack:
In kernel.o:
0xc0028cdc: debug_panic (.../../lib/kernel/debug.c:38)
0xc0023a87: block_to_arena (..../../threads/malloc.c:279)
0xc0023b87: free (..../../threads/malloc.c:224)
0xc002e7e4: vm_destory_func (.../build/../../vm/page.c:26)
0xc002a8dd: hash_clear (..../../lib/kernel/hash.c:63)
0xc002a928: hash_destroy (..../../lib/kernel/hash.c:91)
0xc002e7d1: vm_destroy (.../build/../../vm/page.c:65)
0xc002adc3: process_exit (...../userprog/process.c:274)
0xc00215a5: thread_exit (..../../threads/thread.c:334)
0xc002c4e7: create (...../userprog/syscall.c:177)
0xc002c642: syscall_handler (.../../userprog/syscall.c:42)
0xc00220e6: intr_handler (..../threads/interrupt.c:367)
0xc002221f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/create-exists:
0x0804a399: exit (.../../lib/user/syscall.c:74)
0x08048814: random_init (...ild/../../lib/random.c:35)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
gcc -m32 -c ../../tests/userprog/create-bound.c -o tests/userprog/create-bound.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/create-bound.d
gcc -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/create-bound.o tests/userprog/boundary.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/create-bound
pintos -v -k -T 120 --bochs  --filesys-size=2 -p tests/userprog/create-bound -a create-bound --swap-size=4 -- -q    -f run create-bound < /dev/null 2> tests/userprog/create-bound.errors |tee tests/userprog/create-bound.output
Copying tests/userprog/create-bound to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading.........
Kernel command line: -q -f extract run create-bound
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 13,104 sectors (6 MB), model "BXHD00011", serial "Generic 1234"
hda1: 155 sectors (77 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 103 sectors (51 kB), Pintos scratch (22)
hda4: 8,192 sectors (4 MB), Pintos swap (23)
filesys: using hda2
scratch: using hda3
swap: using hda4
HI
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'create-bound' into the file system...
Erasing ustar archive...
Executing 'create-bound':
(create-bound) begin
(create-bound) create("quux.dat"): 1
(create-bound) end
create-bound: exit(0)
Kernel PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c642 0xc00220e6 0xc002221f 0x804a369 0x80487e4.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 306 ticks
Thread: 49 idle ticks, 207 kernel ticks, 50 user ticks
hda2 (filesys): 76 reads, 214 writes
hda3 (scratch): 102 reads, 2 writes
hda4 (swap): 0 reads, 0 writes
Console: 1488 characters output
Keyboard: 0 keys pressed
Exception: 6 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Aug 30 2016 at 19:39:55
========================================================================
perl -I../.. ../../tests/userprog/create-bound.ck tests/userprog/create-bound tests/userprog/create-bound.result
FAIL tests/userprog/create-bound
Kernel panic in run: PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c642 0xc00220e6 0xc002221f 0x804a369 0x80487e4
Translation of call stack:
In kernel.o:
0xc0028cdc: debug_panic (.../../lib/kernel/debug.c:38)
0xc0023a87: block_to_arena (..../../threads/malloc.c:279)
0xc0023b87: free (..../../threads/malloc.c:224)
0xc002e7e4: vm_destory_func (.../build/../../vm/page.c:26)
0xc002a8dd: hash_clear (..../../lib/kernel/hash.c:63)
0xc002a928: hash_destroy (..../../lib/kernel/hash.c:91)
0xc002e7d1: vm_destroy (.../build/../../vm/page.c:65)
0xc002adc3: process_exit (...../userprog/process.c:274)
0xc00215a5: thread_exit (..../../threads/thread.c:334)
0xc002c4e7: create (...../userprog/syscall.c:177)
0xc002c642: syscall_handler (.../../userprog/syscall.c:42)
0xc00220e6: intr_handler (..../threads/interrupt.c:367)
0xc002221f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/create-bound:
0x0804a369: exit (.../../lib/user/syscall.c:74)
0x080487e4: random_init (...ild/../../lib/random.c:35)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
gcc -m32 -c ../../tests/userprog/open-normal.c -o tests/userprog/open-normal.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/open-normal.d
gcc -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/open-normal.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/open-normal
pintos -v -k -T 120 --bochs  --filesys-size=2 -p tests/userprog/open-normal -a open-normal -p ../../tests/userprog/sample.txt -a sample.txt --swap-size=4 -- -q    -f run open-normal < /dev/null 2> tests/userprog/open-normal.errors |tee tests/userprog/open-normal.output
Copying tests/userprog/open-normal to scratch partition...
Copying ../../tests/userprog/sample.txt to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading.........
Kernel command line: -q -f extract run open-normal
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 13,104 sectors (6 MB), model "BXHD00011", serial "Generic 1234"
hda1: 155 sectors (77 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 102 sectors (51 kB), Pintos scratch (22)
hda4: 8,192 sectors (4 MB), Pintos swap (23)
filesys: using hda2
scratch: using hda3
swap: using hda4
HI
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'open-normal' into the file system...
Putting 'sample.txt' into the file system...
Erasing ustar archive...
Executing 'open-normal':
(open-normal) begin
(open-normal) end
open-normal: exit(0)
Kernel PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c642 0xc00220e6 0xc002221f 0x804a2c9 0x8048744.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 316 ticks
Thread: 50 idle ticks, 229 kernel ticks, 37 user ticks
hda2 (filesys): 92 reads, 210 writes
hda3 (scratch): 101 reads, 2 writes
hda4 (swap): 0 reads, 0 writes
Console: 1490 characters output
Keyboard: 0 keys pressed
Exception: 5 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Aug 30 2016 at 19:39:55
========================================================================
perl -I../.. ../../tests/userprog/open-normal.ck tests/userprog/open-normal tests/userprog/open-normal.result
FAIL tests/userprog/open-normal
Kernel panic in run: PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c642 0xc00220e6 0xc002221f 0x804a2c9 0x8048744
Translation of call stack:
In kernel.o:
0xc0028cdc: debug_panic (.../../lib/kernel/debug.c:38)
0xc0023a87: block_to_arena (..../../threads/malloc.c:279)
0xc0023b87: free (..../../threads/malloc.c:224)
0xc002e7e4: vm_destory_func (.../build/../../vm/page.c:26)
0xc002a8dd: hash_clear (..../../lib/kernel/hash.c:63)
0xc002a928: hash_destroy (..../../lib/kernel/hash.c:91)
0xc002e7d1: vm_destroy (.../build/../../vm/page.c:65)
0xc002adc3: process_exit (...../userprog/process.c:274)
0xc00215a5: thread_exit (..../../threads/thread.c:334)
0xc002c4e7: create (...../userprog/syscall.c:177)
0xc002c642: syscall_handler (.../../userprog/syscall.c:42)
0xc00220e6: intr_handler (..../threads/interrupt.c:367)
0xc002221f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/open-normal:
0x0804a2c9: exit (.../../lib/user/syscall.c:74)
0x08048744: random_init (...ild/../../lib/random.c:35)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
gcc -m32 -c ../../tests/userprog/open-missing.c -o tests/userprog/open-missing.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/open-missing.d
gcc -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/open-missing.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/open-missing
pintos -v -k -T 120 --bochs  --filesys-size=2 -p tests/userprog/open-missing -a open-missing --swap-size=4 -- -q    -f run open-missing < /dev/null 2> tests/userprog/open-missing.errors |tee tests/userprog/open-missing.output
Copying tests/userprog/open-missing to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading.........
Kernel command line: -q -f extract run open-missing
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 13,104 sectors (6 MB), model "BXHD00011", serial "Generic 1234"
hda1: 155 sectors (77 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 100 sectors (50 kB), Pintos scratch (22)
hda4: 8,192 sectors (4 MB), Pintos swap (23)
filesys: using hda2
scratch: using hda3
swap: using hda4
HI
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'open-missing' into the file system...
Erasing ustar archive...
Executing 'open-missing':
(open-missing) begin
(open-missing) end
open-missing: exit(0)
Kernel PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c642 0xc00220e6 0xc002221f 0x804a2c9 0x8048744.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 296 ticks
Thread: 49 idle ticks, 205 kernel ticks, 42 user ticks
hda2 (filesys): 80 reads, 204 writes
hda3 (scratch): 99 reads, 2 writes
hda4 (swap): 0 reads, 0 writes
Console: 1450 characters output
Keyboard: 0 keys pressed
Exception: 5 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Aug 30 2016 at 19:39:55
========================================================================
perl -I../.. ../../tests/userprog/open-missing.ck tests/userprog/open-missing tests/userprog/open-missing.result
FAIL tests/userprog/open-missing
Kernel panic in run: PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c642 0xc00220e6 0xc002221f 0x804a2c9 0x8048744
Translation of call stack:
In kernel.o:
0xc0028cdc: debug_panic (.../../lib/kernel/debug.c:38)
0xc0023a87: block_to_arena (..../../threads/malloc.c:279)
0xc0023b87: free (..../../threads/malloc.c:224)
0xc002e7e4: vm_destory_func (.../build/../../vm/page.c:26)
0xc002a8dd: hash_clear (..../../lib/kernel/hash.c:63)
0xc002a928: hash_destroy (..../../lib/kernel/hash.c:91)
0xc002e7d1: vm_destroy (.../build/../../vm/page.c:65)
0xc002adc3: process_exit (...../userprog/process.c:274)
0xc00215a5: thread_exit (..../../threads/thread.c:334)
0xc002c4e7: create (...../userprog/syscall.c:177)
0xc002c642: syscall_handler (.../../userprog/syscall.c:42)
0xc00220e6: intr_handler (..../threads/interrupt.c:367)
0xc002221f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/open-missing:
0x0804a2c9: exit (.../../lib/user/syscall.c:74)
0x08048744: random_init (...ild/../../lib/random.c:35)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
gcc -m32 -c ../../tests/userprog/open-boundary.c -o tests/userprog/open-boundary.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/open-boundary.d
gcc -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/open-boundary.o tests/userprog/boundary.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/open-boundary
pintos -v -k -T 120 --bochs  --filesys-size=2 -p tests/userprog/open-boundary -a open-boundary -p ../../tests/userprog/sample.txt -a sample.txt --swap-size=4 -- -q    -f run open-boundary < /dev/null 2> tests/userprog/open-boundary.errors |tee tests/userprog/open-boundary.output
Copying tests/userprog/open-boundary to scratch partition...
Copying ../../tests/userprog/sample.txt to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading.........
Kernel command line: -q -f extract run open-boundary
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 13,104 sectors (6 MB), model "BXHD00011", serial "Generic 1234"
hda1: 155 sectors (77 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 105 sectors (52 kB), Pintos scratch (22)
hda4: 8,192 sectors (4 MB), Pintos swap (23)
filesys: using hda2
scratch: using hda3
swap: using hda4
HI
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'open-boundary' into the file system...
Putting 'sample.txt' into the file system...
Erasing ustar archive...
Executing 'open-boundary':
(open-boundary) begin
(open-boundary) open "sample.txt"
(open-boundary) end
open-boundary: exit(0)
Kernel PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c642 0xc00220e6 0xc002221f 0x804a369 0x80487e4.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 323 ticks
Thread: 49 idle ticks, 232 kernel ticks, 42 user ticks
hda2 (filesys): 85 reads, 216 writes
hda3 (scratch): 104 reads, 2 writes
hda4 (swap): 0 reads, 0 writes
Console: 1536 characters output
Keyboard: 0 keys pressed
Exception: 6 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Aug 30 2016 at 19:39:55
========================================================================
perl -I../.. ../../tests/userprog/open-boundary.ck tests/userprog/open-boundary tests/userprog/open-boundary.result
FAIL tests/userprog/open-boundary
Kernel panic in run: PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c642 0xc00220e6 0xc002221f 0x804a369 0x80487e4
Translation of call stack:
In kernel.o:
0xc0028cdc: debug_panic (.../../lib/kernel/debug.c:38)
0xc0023a87: block_to_arena (..../../threads/malloc.c:279)
0xc0023b87: free (..../../threads/malloc.c:224)
0xc002e7e4: vm_destory_func (.../build/../../vm/page.c:26)
0xc002a8dd: hash_clear (..../../lib/kernel/hash.c:63)
0xc002a928: hash_destroy (..../../lib/kernel/hash.c:91)
0xc002e7d1: vm_destroy (.../build/../../vm/page.c:65)
0xc002adc3: process_exit (...../userprog/process.c:274)
0xc00215a5: thread_exit (..../../threads/thread.c:334)
0xc002c4e7: create (...../userprog/syscall.c:177)
0xc002c642: syscall_handler (.../../userprog/syscall.c:42)
0xc00220e6: intr_handler (..../threads/interrupt.c:367)
0xc002221f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/open-boundary:
0x0804a369: exit (.../../lib/user/syscall.c:74)
0x080487e4: random_init (...ild/../../lib/random.c:35)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
gcc -m32 -c ../../tests/userprog/open-empty.c -o tests/userprog/open-empty.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/open-empty.d
gcc -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/open-empty.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/open-empty
pintos -v -k -T 120 --bochs  --filesys-size=2 -p tests/userprog/open-empty -a open-empty --swap-size=4 -- -q    -f run open-empty < /dev/null 2> tests/userprog/open-empty.errors |tee tests/userprog/open-empty.output
Copying tests/userprog/open-empty to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading.........
Kernel command line: -q -f extract run open-empty
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 13,104 sectors (6 MB), model "BXHD00011", serial "Generic 1234"
hda1: 155 sectors (77 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 100 sectors (50 kB), Pintos scratch (22)
hda4: 8,192 sectors (4 MB), Pintos swap (23)
filesys: using hda2
scratch: using hda3
swap: using hda4
HI
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'open-empty' into the file system...
Erasing ustar archive...
Executing 'open-empty':
(open-empty) begin
(open-empty) end
open-empty: exit(0)
Kernel PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c642 0xc00220e6 0xc002221f 0x804a2c9 0x8048744.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 296 ticks
Thread: 49 idle ticks, 205 kernel ticks, 42 user ticks
hda2 (filesys): 80 reads, 204 writes
hda3 (scratch): 99 reads, 2 writes
hda4 (swap): 0 reads, 0 writes
Console: 1438 characters output
Keyboard: 0 keys pressed
Exception: 5 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Aug 30 2016 at 19:39:55
========================================================================
perl -I../.. ../../tests/userprog/open-empty.ck tests/userprog/open-empty tests/userprog/open-empty.result
FAIL tests/userprog/open-empty
Kernel panic in run: PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c642 0xc00220e6 0xc002221f 0x804a2c9 0x8048744
Translation of call stack:
In kernel.o:
0xc0028cdc: debug_panic (.../../lib/kernel/debug.c:38)
0xc0023a87: block_to_arena (..../../threads/malloc.c:279)
0xc0023b87: free (..../../threads/malloc.c:224)
0xc002e7e4: vm_destory_func (.../build/../../vm/page.c:26)
0xc002a8dd: hash_clear (..../../lib/kernel/hash.c:63)
0xc002a928: hash_destroy (..../../lib/kernel/hash.c:91)
0xc002e7d1: vm_destroy (.../build/../../vm/page.c:65)
0xc002adc3: process_exit (...../userprog/process.c:274)
0xc00215a5: thread_exit (..../../threads/thread.c:334)
0xc002c4e7: create (...../userprog/syscall.c:177)
0xc002c642: syscall_handler (.../../userprog/syscall.c:42)
0xc00220e6: intr_handler (..../threads/interrupt.c:367)
0xc002221f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/open-empty:
0x0804a2c9: exit (.../../lib/user/syscall.c:74)
0x08048744: random_init (...ild/../../lib/random.c:35)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
gcc -m32 -c ../../tests/userprog/open-null.c -o tests/userprog/open-null.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/open-null.d
gcc -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/open-null.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/open-null
pintos -v -k -T 120 --bochs  --filesys-size=2 -p tests/userprog/open-null -a open-null --swap-size=4 -- -q    -f run open-null < /dev/null 2> tests/userprog/open-null.errors |tee tests/userprog/open-null.output
Copying tests/userprog/open-null to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading.........
Kernel command line: -q -f extract run open-null
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 13,104 sectors (6 MB), model "BXHD00011", serial "Generic 1234"
hda1: 155 sectors (77 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 100 sectors (50 kB), Pintos scratch (22)
hda4: 8,192 sectors (4 MB), Pintos swap (23)
filesys: using hda2
scratch: using hda3
swap: using hda4
HI
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'open-null' into the file system...
Erasing ustar archive...
Executing 'open-null':
(open-null) begin
open-null: exit(-1)
Kernel PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c53f 0xc002c562 0xc002c70e 0xc00220e6 0xc002221f 0x804a1bb 0x80480b2 0x80480e4 0x804872c.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 282 ticks
Thread: 49 idle ticks, 204 kernel ticks, 29 user ticks
hda2 (filesys): 62 reads, 204 writes
hda3 (scratch): 99 reads, 2 writes
hda4 (swap): 0 reads, 0 writes
Console: 1459 characters output
Keyboard: 0 keys pressed
Exception: 5 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Aug 30 2016 at 19:39:55
========================================================================
perl -I../.. ../../tests/userprog/open-null.ck tests/userprog/open-null tests/userprog/open-null.result
FAIL tests/userprog/open-null
Kernel panic in run: PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c53f 0xc002c562 0xc002c70e 0xc00220e6 0xc002221f 0x804a1bb 0x80480b2 0x80480e4 0x804872c
Translation of call stack:
In kernel.o:
0xc0028cdc: debug_panic (.../../lib/kernel/debug.c:38)
0xc0023a87: block_to_arena (..../../threads/malloc.c:279)
0xc0023b87: free (..../../threads/malloc.c:224)
0xc002e7e4: vm_destory_func (.../build/../../vm/page.c:26)
0xc002a8dd: hash_clear (..../../lib/kernel/hash.c:63)
0xc002a928: hash_destroy (..../../lib/kernel/hash.c:91)
0xc002e7d1: vm_destroy (.../build/../../vm/page.c:65)
0xc002adc3: process_exit (...../userprog/process.c:274)
0xc00215a5: thread_exit (..../../threads/thread.c:334)
0xc002c4e7: create (...../userprog/syscall.c:177)
0xc002c53f: check_address (.../../userprog/syscall.c:96)
0xc002c562: check_valid_string (...../userprog/syscall.c:120)
0xc002c70e: syscall_handler (.../../userprog/syscall.c:57)
0xc00220e6: intr_handler (..../threads/interrupt.c:367)
0xc002221f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/open-null:
0x0804a1bb: open (...../lib/user/syscall.c:105)
0x080480b2: test_main (...s/userprog/open-null.c:12)
0x080480e4: main (...ild/../../tests/main.c:13)
0x0804872c: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
gcc -m32 -c ../../tests/userprog/open-bad-ptr.c -o tests/userprog/open-bad-ptr.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/open-bad-ptr.d
gcc -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/open-bad-ptr.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/open-bad-ptr
pintos -v -k -T 120 --bochs  --filesys-size=2 -p tests/userprog/open-bad-ptr -a open-bad-ptr --swap-size=4 -- -q    -f run open-bad-ptr < /dev/null 2> tests/userprog/open-bad-ptr.errors |tee tests/userprog/open-bad-ptr.output
Copying tests/userprog/open-bad-ptr to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading.........
Kernel command line: -q -f extract run open-bad-ptr
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 13,104 sectors (6 MB), model "BXHD00011", serial "Generic 1234"
hda1: 155 sectors (77 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 100 sectors (50 kB), Pintos scratch (22)
hda4: 8,192 sectors (4 MB), Pintos swap (23)
filesys: using hda2
scratch: using hda3
swap: using hda4
HI
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'open-bad-ptr' into the file system...
Erasing ustar archive...
Executing 'open-bad-ptr':
(open-bad-ptr) begin
open-bad-ptr: exit(-1)
Kernel PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c572 0xc002c70e 0xc00220e6 0xc002221f 0x804a1db 0x80480b2 0x8048100 0x804874c.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 284 ticks
Thread: 49 idle ticks, 205 kernel ticks, 30 user ticks
hda2 (filesys): 63 reads, 204 writes
hda3 (scratch): 99 reads, 2 writes
hda4 (swap): 0 reads, 0 writes
Console: 1463 characters output
Keyboard: 0 keys pressed
Exception: 5 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Aug 30 2016 at 19:39:55
========================================================================
perl -I../.. ../../tests/userprog/open-bad-ptr.ck tests/userprog/open-bad-ptr tests/userprog/open-bad-ptr.result
FAIL tests/userprog/open-bad-ptr
Kernel panic in run: PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c572 0xc002c70e 0xc00220e6 0xc002221f 0x804a1db 0x80480b2 0x8048100 0x804874c
Translation of call stack:
In kernel.o:
0xc0028cdc: debug_panic (.../../lib/kernel/debug.c:38)
0xc0023a87: block_to_arena (..../../threads/malloc.c:279)
0xc0023b87: free (..../../threads/malloc.c:224)
0xc002e7e4: vm_destory_func (.../build/../../vm/page.c:26)
0xc002a8dd: hash_clear (..../../lib/kernel/hash.c:63)
0xc002a928: hash_destroy (..../../lib/kernel/hash.c:91)
0xc002e7d1: vm_destroy (.../build/../../vm/page.c:65)
0xc002adc3: process_exit (...../userprog/process.c:274)
0xc00215a5: thread_exit (..../../threads/thread.c:334)
0xc002c4e7: create (...../userprog/syscall.c:177)
0xc002c572: check_valid_string (...../userprog/syscall.c:123)
0xc002c70e: syscall_handler (.../../userprog/syscall.c:57)
0xc00220e6: intr_handler (..../threads/interrupt.c:367)
0xc002221f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/open-bad-ptr:
0x0804a1db: open (...../lib/user/syscall.c:105)
0x080480b2: test_main (...serprog/open-bad-ptr.c:11)
0x08048100: main (...ild/../../tests/main.c:13)
0x0804874c: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
gcc -m32 -c ../../tests/userprog/open-twice.c -o tests/userprog/open-twice.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/open-twice.d
gcc -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/open-twice.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/open-twice
pintos -v -k -T 120 --bochs  --filesys-size=2 -p tests/userprog/open-twice -a open-twice -p ../../tests/userprog/sample.txt -a sample.txt --swap-size=4 -- -q    -f run open-twice < /dev/null 2> tests/userprog/open-twice.errors |tee tests/userprog/open-twice.output
Copying tests/userprog/open-twice to scratch partition...
Copying ../../tests/userprog/sample.txt to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading.........
Kernel command line: -q -f extract run open-twice
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 13,104 sectors (6 MB), model "BXHD00011", serial "Generic 1234"
hda1: 155 sectors (77 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 103 sectors (51 kB), Pintos scratch (22)
hda4: 8,192 sectors (4 MB), Pintos swap (23)
filesys: using hda2
scratch: using hda3
swap: using hda4
HI
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'open-twice' into the file system...
Putting 'sample.txt' into the file system...
Erasing ustar archive...
Executing 'open-twice':
(open-twice) begin
(open-twice) open "sample.txt" once
(open-twice) open "sample.txt" again
(open-twice) end
open-twice: exit(0)
Kernel PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c642 0xc00220e6 0xc002221f 0x804a339 0x80487b4.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 333 ticks
Thread: 51 idle ticks, 228 kernel ticks, 54 user ticks
hda2 (filesys): 101 reads, 212 writes
hda3 (scratch): 102 reads, 2 writes
hda4 (swap): 0 reads, 0 writes
Console: 1558 characters output
Keyboard: 0 keys pressed
Exception: 5 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Aug 30 2016 at 19:39:55
========================================================================
perl -I../.. ../../tests/userprog/open-twice.ck tests/userprog/open-twice tests/userprog/open-twice.result
FAIL tests/userprog/open-twice
Kernel panic in run: PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c642 0xc00220e6 0xc002221f 0x804a339 0x80487b4
Translation of call stack:
In kernel.o:
0xc0028cdc: debug_panic (.../../lib/kernel/debug.c:38)
0xc0023a87: block_to_arena (..../../threads/malloc.c:279)
0xc0023b87: free (..../../threads/malloc.c:224)
0xc002e7e4: vm_destory_func (.../build/../../vm/page.c:26)
0xc002a8dd: hash_clear (..../../lib/kernel/hash.c:63)
0xc002a928: hash_destroy (..../../lib/kernel/hash.c:91)
0xc002e7d1: vm_destroy (.../build/../../vm/page.c:65)
0xc002adc3: process_exit (...../userprog/process.c:274)
0xc00215a5: thread_exit (..../../threads/thread.c:334)
0xc002c4e7: create (...../userprog/syscall.c:177)
0xc002c642: syscall_handler (.../../userprog/syscall.c:42)
0xc00220e6: intr_handler (..../threads/interrupt.c:367)
0xc002221f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/open-twice:
0x0804a339: exit (.../../lib/user/syscall.c:74)
0x080487b4: random_init (...ild/../../lib/random.c:35)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
gcc -m32 -c ../../tests/userprog/close-normal.c -o tests/userprog/close-normal.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/close-normal.d
gcc -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/close-normal.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/close-normal
pintos -v -k -T 120 --bochs  --filesys-size=2 -p tests/userprog/close-normal -a close-normal -p ../../tests/userprog/sample.txt -a sample.txt --swap-size=4 -- -q    -f run close-normal < /dev/null 2> tests/userprog/close-normal.errors |tee tests/userprog/close-normal.output
Copying tests/userprog/close-normal to scratch partition...
Copying ../../tests/userprog/sample.txt to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading.........
Kernel command line: -q -f extract run close-normal
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 13,104 sectors (6 MB), model "BXHD00011", serial "Generic 1234"
hda1: 155 sectors (77 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 103 sectors (51 kB), Pintos scratch (22)
hda4: 8,192 sectors (4 MB), Pintos swap (23)
filesys: using hda2
scratch: using hda3
swap: using hda4
HI
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'close-normal' into the file system...
Putting 'sample.txt' into the file system...
Erasing ustar archive...
Executing 'close-normal':
(close-normal) begin
(close-normal) open "sample.txt"
(close-normal) close "sample.txt"
(close-normal) end
close-normal: exit(0)
Kernel PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c642 0xc00220e6 0xc002221f 0x804a2e9 0x8048764.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 327 ticks
Thread: 52 idle ticks, 227 kernel ticks, 48 user ticks
hda2 (filesys): 92 reads, 212 writes
hda3 (scratch): 102 reads, 2 writes
hda4 (swap): 0 reads, 0 writes
Console: 1563 characters output
Keyboard: 0 keys pressed
Exception: 5 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Aug 30 2016 at 19:39:55
========================================================================
perl -I../.. ../../tests/userprog/close-normal.ck tests/userprog/close-normal tests/userprog/close-normal.result
FAIL tests/userprog/close-normal
Kernel panic in run: PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c642 0xc00220e6 0xc002221f 0x804a2e9 0x8048764
Translation of call stack:
In kernel.o:
0xc0028cdc: debug_panic (.../../lib/kernel/debug.c:38)
0xc0023a87: block_to_arena (..../../threads/malloc.c:279)
0xc0023b87: free (..../../threads/malloc.c:224)
0xc002e7e4: vm_destory_func (.../build/../../vm/page.c:26)
0xc002a8dd: hash_clear (..../../lib/kernel/hash.c:63)
0xc002a928: hash_destroy (..../../lib/kernel/hash.c:91)
0xc002e7d1: vm_destroy (.../build/../../vm/page.c:65)
0xc002adc3: process_exit (...../userprog/process.c:274)
0xc00215a5: thread_exit (..../../threads/thread.c:334)
0xc002c4e7: create (...../userprog/syscall.c:177)
0xc002c642: syscall_handler (.../../userprog/syscall.c:42)
0xc00220e6: intr_handler (..../threads/interrupt.c:367)
0xc002221f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/close-normal:
0x0804a2e9: exit (.../../lib/user/syscall.c:74)
0x08048764: random_init (...ild/../../lib/random.c:35)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
gcc -m32 -c ../../tests/userprog/close-twice.c -o tests/userprog/close-twice.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/close-twice.d
gcc -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/close-twice.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/close-twice
pintos -v -k -T 120 --bochs  --filesys-size=2 -p tests/userprog/close-twice -a close-twice -p ../../tests/userprog/sample.txt -a sample.txt --swap-size=4 -- -q    -f run close-twice < /dev/null 2> tests/userprog/close-twice.errors |tee tests/userprog/close-twice.output
Copying tests/userprog/close-twice to scratch partition...
Copying ../../tests/userprog/sample.txt to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading.........
Kernel command line: -q -f extract run close-twice
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 13,104 sectors (6 MB), model "BXHD00011", serial "Generic 1234"
hda1: 155 sectors (77 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 103 sectors (51 kB), Pintos scratch (22)
hda4: 8,192 sectors (4 MB), Pintos swap (23)
filesys: using hda2
scratch: using hda3
swap: using hda4
HI
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'close-twice' into the file system...
Putting 'sample.txt' into the file system...
Erasing ustar archive...
Executing 'close-twice':
(close-twice) begin
(close-twice) open "sample.txt"
(close-twice) close "sample.txt"
(close-twice) close "sample.txt" again
(close-twice) end
close-twice: exit(0)
Kernel PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c642 0xc00220e6 0xc002221f 0x804a309 0x8048784.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 332 ticks
Thread: 52 idle ticks, 227 kernel ticks, 53 user ticks
hda2 (filesys): 92 reads, 212 writes
hda3 (scratch): 102 reads, 2 writes
hda4 (swap): 0 reads, 0 writes
Console: 1594 characters output
Keyboard: 0 keys pressed
Exception: 5 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Aug 30 2016 at 19:39:55
========================================================================
perl -I../.. ../../tests/userprog/close-twice.ck tests/userprog/close-twice tests/userprog/close-twice.result
FAIL tests/userprog/close-twice
Kernel panic in run: PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c642 0xc00220e6 0xc002221f 0x804a309 0x8048784
Translation of call stack:
In kernel.o:
0xc0028cdc: debug_panic (.../../lib/kernel/debug.c:38)
0xc0023a87: block_to_arena (..../../threads/malloc.c:279)
0xc0023b87: free (..../../threads/malloc.c:224)
0xc002e7e4: vm_destory_func (.../build/../../vm/page.c:26)
0xc002a8dd: hash_clear (..../../lib/kernel/hash.c:63)
0xc002a928: hash_destroy (..../../lib/kernel/hash.c:91)
0xc002e7d1: vm_destroy (.../build/../../vm/page.c:65)
0xc002adc3: process_exit (...../userprog/process.c:274)
0xc00215a5: thread_exit (..../../threads/thread.c:334)
0xc002c4e7: create (...../userprog/syscall.c:177)
0xc002c642: syscall_handler (.../../userprog/syscall.c:42)
0xc00220e6: intr_handler (..../threads/interrupt.c:367)
0xc002221f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/close-twice:
0x0804a309: exit (.../../lib/user/syscall.c:74)
0x08048784: random_init (...ild/../../lib/random.c:35)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
gcc -m32 -c ../../tests/userprog/close-stdin.c -o tests/userprog/close-stdin.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/close-stdin.d
gcc -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/close-stdin.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/close-stdin
pintos -v -k -T 120 --bochs  --filesys-size=2 -p tests/userprog/close-stdin -a close-stdin --swap-size=4 -- -q    -f run close-stdin < /dev/null 2> tests/userprog/close-stdin.errors |tee tests/userprog/close-stdin.output
Copying tests/userprog/close-stdin to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading.........
Kernel command line: -q -f extract run close-stdin
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 13,104 sectors (6 MB), model "BXHD00011", serial "Generic 1234"
hda1: 155 sectors (77 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 100 sectors (50 kB), Pintos scratch (22)
hda4: 8,192 sectors (4 MB), Pintos swap (23)
filesys: using hda2
scratch: using hda3
swap: using hda4
HI
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'close-stdin' into the file system...
Erasing ustar archive...
Executing 'close-stdin':
(close-stdin) begin
(close-stdin) end
close-stdin: exit(0)
Kernel PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c642 0xc00220e6 0xc002221f 0x804a2b9 0x8048734.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 286 ticks
Thread: 50 idle ticks, 204 kernel ticks, 32 user ticks
hda2 (filesys): 62 reads, 204 writes
hda3 (scratch): 99 reads, 2 writes
hda4 (swap): 0 reads, 0 writes
Console: 1444 characters output
Keyboard: 0 keys pressed
Exception: 5 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Aug 30 2016 at 19:39:55
========================================================================
perl -I../.. ../../tests/userprog/close-stdin.ck tests/userprog/close-stdin tests/userprog/close-stdin.result
FAIL tests/userprog/close-stdin
Kernel panic in run: PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c642 0xc00220e6 0xc002221f 0x804a2b9 0x8048734
Translation of call stack:
In kernel.o:
0xc0028cdc: debug_panic (.../../lib/kernel/debug.c:38)
0xc0023a87: block_to_arena (..../../threads/malloc.c:279)
0xc0023b87: free (..../../threads/malloc.c:224)
0xc002e7e4: vm_destory_func (.../build/../../vm/page.c:26)
0xc002a8dd: hash_clear (..../../lib/kernel/hash.c:63)
0xc002a928: hash_destroy (..../../lib/kernel/hash.c:91)
0xc002e7d1: vm_destroy (.../build/../../vm/page.c:65)
0xc002adc3: process_exit (...../userprog/process.c:274)
0xc00215a5: thread_exit (..../../threads/thread.c:334)
0xc002c4e7: create (...../userprog/syscall.c:177)
0xc002c642: syscall_handler (.../../userprog/syscall.c:42)
0xc00220e6: intr_handler (..../threads/interrupt.c:367)
0xc002221f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/close-stdin:
0x0804a2b9: exit (.../../lib/user/syscall.c:74)
0x08048734: random_init (...ild/../../lib/random.c:35)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
gcc -m32 -c ../../tests/userprog/close-stdout.c -o tests/userprog/close-stdout.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/close-stdout.d
gcc -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/close-stdout.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/close-stdout
pintos -v -k -T 120 --bochs  --filesys-size=2 -p tests/userprog/close-stdout -a close-stdout --swap-size=4 -- -q    -f run close-stdout < /dev/null 2> tests/userprog/close-stdout.errors |tee tests/userprog/close-stdout.output
Copying tests/userprog/close-stdout to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading.........
Kernel command line: -q -f extract run close-stdout
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 13,104 sectors (6 MB), model "BXHD00011", serial "Generic 1234"
hda1: 155 sectors (77 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 100 sectors (50 kB), Pintos scratch (22)
hda4: 8,192 sectors (4 MB), Pintos swap (23)
filesys: using hda2
scratch: using hda3
swap: using hda4
HI
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'close-stdout' into the file system...
Erasing ustar archive...
Executing 'close-stdout':
(close-stdout) begin
(close-stdout) end
close-stdout: exit(0)
Kernel PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c642 0xc00220e6 0xc002221f 0x804a2b9 0x8048734.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 288 ticks
Thread: 49 idle ticks, 205 kernel ticks, 34 user ticks
hda2 (filesys): 62 reads, 204 writes
hda3 (scratch): 99 reads, 2 writes
hda4 (swap): 0 reads, 0 writes
Console: 1450 characters output
Keyboard: 0 keys pressed
Exception: 5 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Aug 30 2016 at 19:39:55
========================================================================
perl -I../.. ../../tests/userprog/close-stdout.ck tests/userprog/close-stdout tests/userprog/close-stdout.result
FAIL tests/userprog/close-stdout
Kernel panic in run: PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c642 0xc00220e6 0xc002221f 0x804a2b9 0x8048734
Translation of call stack:
In kernel.o:
0xc0028cdc: debug_panic (.../../lib/kernel/debug.c:38)
0xc0023a87: block_to_arena (..../../threads/malloc.c:279)
0xc0023b87: free (..../../threads/malloc.c:224)
0xc002e7e4: vm_destory_func (.../build/../../vm/page.c:26)
0xc002a8dd: hash_clear (..../../lib/kernel/hash.c:63)
0xc002a928: hash_destroy (..../../lib/kernel/hash.c:91)
0xc002e7d1: vm_destroy (.../build/../../vm/page.c:65)
0xc002adc3: process_exit (...../userprog/process.c:274)
0xc00215a5: thread_exit (..../../threads/thread.c:334)
0xc002c4e7: create (...../userprog/syscall.c:177)
0xc002c642: syscall_handler (.../../userprog/syscall.c:42)
0xc00220e6: intr_handler (..../threads/interrupt.c:367)
0xc002221f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/close-stdout:
0x0804a2b9: exit (.../../lib/user/syscall.c:74)
0x08048734: random_init (...ild/../../lib/random.c:35)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
gcc -m32 -c ../../tests/userprog/close-bad-fd.c -o tests/userprog/close-bad-fd.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/close-bad-fd.d
gcc -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/close-bad-fd.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/close-bad-fd
pintos -v -k -T 120 --bochs  --filesys-size=2 -p tests/userprog/close-bad-fd -a close-bad-fd --swap-size=4 -- -q    -f run close-bad-fd < /dev/null 2> tests/userprog/close-bad-fd.errors |tee tests/userprog/close-bad-fd.output
Copying tests/userprog/close-bad-fd to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading.........
Kernel command line: -q -f extract run close-bad-fd
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 13,104 sectors (6 MB), model "BXHD00011", serial "Generic 1234"
hda1: 155 sectors (77 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 100 sectors (50 kB), Pintos scratch (22)
hda4: 8,192 sectors (4 MB), Pintos swap (23)
filesys: using hda2
scratch: using hda3
swap: using hda4
HI
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'close-bad-fd' into the file system...
Erasing ustar archive...
Executing 'close-bad-fd':
(close-bad-fd) begin
(close-bad-fd) end
close-bad-fd: exit(0)
Kernel PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c642 0xc00220e6 0xc002221f 0x804a2b9 0x8048734.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 288 ticks
Thread: 49 idle ticks, 205 kernel ticks, 34 user ticks
hda2 (filesys): 62 reads, 204 writes
hda3 (scratch): 99 reads, 2 writes
hda4 (swap): 0 reads, 0 writes
Console: 1450 characters output
Keyboard: 0 keys pressed
Exception: 5 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Aug 30 2016 at 19:39:55
========================================================================
perl -I../.. ../../tests/userprog/close-bad-fd.ck tests/userprog/close-bad-fd tests/userprog/close-bad-fd.result
FAIL tests/userprog/close-bad-fd
Kernel panic in run: PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c642 0xc00220e6 0xc002221f 0x804a2b9 0x8048734
Translation of call stack:
In kernel.o:
0xc0028cdc: debug_panic (.../../lib/kernel/debug.c:38)
0xc0023a87: block_to_arena (..../../threads/malloc.c:279)
0xc0023b87: free (..../../threads/malloc.c:224)
0xc002e7e4: vm_destory_func (.../build/../../vm/page.c:26)
0xc002a8dd: hash_clear (..../../lib/kernel/hash.c:63)
0xc002a928: hash_destroy (..../../lib/kernel/hash.c:91)
0xc002e7d1: vm_destroy (.../build/../../vm/page.c:65)
0xc002adc3: process_exit (...../userprog/process.c:274)
0xc00215a5: thread_exit (..../../threads/thread.c:334)
0xc002c4e7: create (...../userprog/syscall.c:177)
0xc002c642: syscall_handler (.../../userprog/syscall.c:42)
0xc00220e6: intr_handler (..../threads/interrupt.c:367)
0xc002221f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/close-bad-fd:
0x0804a2b9: exit (.../../lib/user/syscall.c:74)
0x08048734: random_init (...ild/../../lib/random.c:35)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
gcc -m32 -c ../../tests/userprog/read-normal.c -o tests/userprog/read-normal.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/read-normal.d
gcc -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/read-normal.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/read-normal
pintos -v -k -T 120 --bochs  --filesys-size=2 -p tests/userprog/read-normal -a read-normal -p ../../tests/userprog/sample.txt -a sample.txt --swap-size=4 -- -q    -f run read-normal < /dev/null 2> tests/userprog/read-normal.errors |tee tests/userprog/read-normal.output
Copying tests/userprog/read-normal to scratch partition...
Copying ../../tests/userprog/sample.txt to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading.........
Kernel command line: -q -f extract run read-normal
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 13,104 sectors (6 MB), model "BXHD00011", serial "Generic 1234"
hda1: 155 sectors (77 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 103 sectors (51 kB), Pintos scratch (22)
hda4: 8,192 sectors (4 MB), Pintos swap (23)
filesys: using hda2
scratch: using hda3
swap: using hda4
HI
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'read-normal' into the file system...
Putting 'sample.txt' into the file system...
Erasing ustar archive...
Executing 'read-normal':
(read-normal) begin
(read-normal) open "sample.txt" for verification
read-normal: exit(-1)
Kernel PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c5ad 0xc002c786 0xc00220e6 0xc002221f 0x804a1ef 0x80484f5 0x80485ec 0x80480c2 0x80480f4 0x804873c.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 321 ticks
Thread: 53 idle ticks, 227 kernel ticks, 41 user ticks
hda2 (filesys): 92 reads, 212 writes
hda3 (scratch): 102 reads, 2 writes
hda4 (swap): 0 reads, 0 writes
Console: 1573 characters output
Keyboard: 0 keys pressed
Exception: 5 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Aug 30 2016 at 19:39:55
========================================================================
perl -I../.. ../../tests/userprog/read-normal.ck tests/userprog/read-normal tests/userprog/read-normal.result
FAIL tests/userprog/read-normal
Kernel panic in run: PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c5ad 0xc002c786 0xc00220e6 0xc002221f 0x804a1ef 0x80484f5 0x80485ec 0x80480c2 0x80480f4 0x804873c
Translation of call stack:
In kernel.o:
0xc0028cdc: debug_panic (.../../lib/kernel/debug.c:38)
0xc0023a87: block_to_arena (..../../threads/malloc.c:279)
0xc0023b87: free (..../../threads/malloc.c:224)
0xc002e7e4: vm_destory_func (.../build/../../vm/page.c:26)
0xc002a8dd: hash_clear (..../../lib/kernel/hash.c:63)
0xc002a928: hash_destroy (..../../lib/kernel/hash.c:91)
0xc002e7d1: vm_destroy (.../build/../../vm/page.c:65)
0xc002adc3: process_exit (...../userprog/process.c:274)
0xc00215a5: thread_exit (..../../threads/thread.c:334)
0xc002c4e7: create (...../userprog/syscall.c:177)
0xc002c5ad: check_valid_buffer (...../userprog/syscall.c:110)
0xc002c786: syscall_handler (.../../userprog/syscall.c:66)
0xc00220e6: intr_handler (..../threads/interrupt.c:367)
0xc002221f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/read-normal:
0x0804a1ef: read (...../lib/user/syscall.c:117)
0x080484f5: check_file_handle (...ild/../../tests/lib.c:133)
0x080485ec: check_file (...ild/../../tests/lib.c:158)
0x080480c2: test_main (...userprog/read-normal.c:11)
0x080480f4: main (...ild/../../tests/main.c:13)
0x0804873c: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
gcc -m32 -c ../../tests/userprog/read-bad-ptr.c -o tests/userprog/read-bad-ptr.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/read-bad-ptr.d
gcc -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/read-bad-ptr.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/read-bad-ptr
pintos -v -k -T 120 --bochs  --filesys-size=2 -p tests/userprog/read-bad-ptr -a read-bad-ptr -p ../../tests/userprog/sample.txt -a sample.txt --swap-size=4 -- -q    -f run read-bad-ptr < /dev/null 2> tests/userprog/read-bad-ptr.errors |tee tests/userprog/read-bad-ptr.output
Copying tests/userprog/read-bad-ptr to scratch partition...
Copying ../../tests/userprog/sample.txt to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading.........
Kernel command line: -q -f extract run read-bad-ptr
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 13,104 sectors (6 MB), model "BXHD00011", serial "Generic 1234"
hda1: 155 sectors (77 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 103 sectors (51 kB), Pintos scratch (22)
hda4: 8,192 sectors (4 MB), Pintos swap (23)
filesys: using hda2
scratch: using hda3
swap: using hda4
HI
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'read-bad-ptr' into the file system...
Putting 'sample.txt' into the file system...
Erasing ustar archive...
Executing 'read-bad-ptr':
(read-bad-ptr) begin
(read-bad-ptr) open "sample.txt"
read-bad-ptr: exit(-1)
Kernel PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c53f 0xc002c59d 0xc002c786 0xc00220e6 0xc002221f 0x804a21f 0x80480e7 0x8048124 0x804876c.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 319 ticks
Thread: 52 idle ticks, 227 kernel ticks, 40 user ticks
hda2 (filesys): 92 reads, 212 writes
hda3 (scratch): 102 reads, 2 writes
hda4 (swap): 0 reads, 0 writes
Console: 1553 characters output
Keyboard: 0 keys pressed
Exception: 5 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Aug 30 2016 at 19:39:55
========================================================================
perl -I../.. ../../tests/userprog/read-bad-ptr.ck tests/userprog/read-bad-ptr tests/userprog/read-bad-ptr.result
FAIL tests/userprog/read-bad-ptr
Kernel panic in run: PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c53f 0xc002c59d 0xc002c786 0xc00220e6 0xc002221f 0x804a21f 0x80480e7 0x8048124 0x804876c
Translation of call stack:
In kernel.o:
0xc0028cdc: debug_panic (.../../lib/kernel/debug.c:38)
0xc0023a87: block_to_arena (..../../threads/malloc.c:279)
0xc0023b87: free (..../../threads/malloc.c:224)
0xc002e7e4: vm_destory_func (.../build/../../vm/page.c:26)
0xc002a8dd: hash_clear (..../../lib/kernel/hash.c:63)
0xc002a928: hash_destroy (..../../lib/kernel/hash.c:91)
0xc002e7d1: vm_destroy (.../build/../../vm/page.c:65)
0xc002adc3: process_exit (...../userprog/process.c:274)
0xc00215a5: thread_exit (..../../threads/thread.c:334)
0xc002c4e7: create (...../userprog/syscall.c:177)
0xc002c53f: check_address (.../../userprog/syscall.c:96)
0xc002c59d: check_valid_buffer (...../userprog/syscall.c:106)
0xc002c786: syscall_handler (.../../userprog/syscall.c:66)
0xc00220e6: intr_handler (..../threads/interrupt.c:367)
0xc002221f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/read-bad-ptr:
0x0804a21f: read (...../lib/user/syscall.c:117)
0x080480e7: test_main (...serprog/read-bad-ptr.c:15)
0x08048124: main (...ild/../../tests/main.c:13)
0x0804876c: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
gcc -m32 -c ../../tests/userprog/read-boundary.c -o tests/userprog/read-boundary.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/read-boundary.d
gcc -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/read-boundary.o tests/userprog/boundary.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/read-boundary
pintos -v -k -T 120 --bochs  --filesys-size=2 -p tests/userprog/read-boundary -a read-boundary -p ../../tests/userprog/sample.txt -a sample.txt --swap-size=4 -- -q    -f run read-boundary < /dev/null 2> tests/userprog/read-boundary.errors |tee tests/userprog/read-boundary.output
Copying tests/userprog/read-boundary to scratch partition...
Copying ../../tests/userprog/sample.txt to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading.........
Kernel command line: -q -f extract run read-boundary
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 13,104 sectors (6 MB), model "BXHD00011", serial "Generic 1234"
hda1: 155 sectors (77 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 106 sectors (53 kB), Pintos scratch (22)
hda4: 8,192 sectors (4 MB), Pintos swap (23)
filesys: using hda2
scratch: using hda3
swap: using hda4
HI
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'read-boundary' into the file system...
Putting 'sample.txt' into the file system...
Erasing ustar archive...
Executing 'read-boundary':
(read-boundary) begin
(read-boundary) open "sample.txt"
(read-boundary) end
read-boundary: exit(0)
Kernel PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c642 0xc00220e6 0xc002221f 0x804a3e9 0x8048864.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 327 ticks
Thread: 52 idle ticks, 230 kernel ticks, 45 user ticks
hda2 (filesys): 94 reads, 218 writes
hda3 (scratch): 105 reads, 2 writes
hda4 (swap): 0 reads, 0 writes
Console: 1536 characters output
Keyboard: 0 keys pressed
Exception: 7 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Aug 30 2016 at 19:39:55
========================================================================
perl -I../.. ../../tests/userprog/read-boundary.ck tests/userprog/read-boundary tests/userprog/read-boundary.result
FAIL tests/userprog/read-boundary
Kernel panic in run: PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c642 0xc00220e6 0xc002221f 0x804a3e9 0x8048864
Translation of call stack:
In kernel.o:
0xc0028cdc: debug_panic (.../../lib/kernel/debug.c:38)
0xc0023a87: block_to_arena (..../../threads/malloc.c:279)
0xc0023b87: free (..../../threads/malloc.c:224)
0xc002e7e4: vm_destory_func (.../build/../../vm/page.c:26)
0xc002a8dd: hash_clear (..../../lib/kernel/hash.c:63)
0xc002a928: hash_destroy (..../../lib/kernel/hash.c:91)
0xc002e7d1: vm_destroy (.../build/../../vm/page.c:65)
0xc002adc3: process_exit (...../userprog/process.c:274)
0xc00215a5: thread_exit (..../../threads/thread.c:334)
0xc002c4e7: create (...../userprog/syscall.c:177)
0xc002c642: syscall_handler (.../../userprog/syscall.c:42)
0xc00220e6: intr_handler (..../threads/interrupt.c:367)
0xc002221f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/read-boundary:
0x0804a3e9: exit (.../../lib/user/syscall.c:74)
0x08048864: random_init (...ild/../../lib/random.c:35)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
gcc -m32 -c ../../tests/userprog/read-zero.c -o tests/userprog/read-zero.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/read-zero.d
gcc -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/read-zero.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/read-zero
pintos -v -k -T 120 --bochs  --filesys-size=2 -p tests/userprog/read-zero -a read-zero -p ../../tests/userprog/sample.txt -a sample.txt --swap-size=4 -- -q    -f run read-zero < /dev/null 2> tests/userprog/read-zero.errors |tee tests/userprog/read-zero.output
Copying tests/userprog/read-zero to scratch partition...
Copying ../../tests/userprog/sample.txt to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading.........
Kernel command line: -q -f extract run read-zero
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 13,104 sectors (6 MB), model "BXHD00011", serial "Generic 1234"
hda1: 155 sectors (77 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 103 sectors (51 kB), Pintos scratch (22)
hda4: 8,192 sectors (4 MB), Pintos swap (23)
filesys: using hda2
scratch: using hda3
swap: using hda4
HI
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'read-zero' into the file system...
Putting 'sample.txt' into the file system...
Erasing ustar archive...
Executing 'read-zero':
(read-zero) begin
(read-zero) open "sample.txt"
read-zero: exit(-1)
Kernel PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c5ad 0xc002c786 0xc00220e6 0xc002221f 0x804a23f 0x80480ea 0x8048144 0x804878c.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 317 ticks
Thread: 49 idle ticks, 229 kernel ticks, 39 user ticks
hda2 (filesys): 92 reads, 212 writes
hda3 (scratch): 102 reads, 2 writes
hda4 (swap): 0 reads, 0 writes
Console: 1524 characters output
Keyboard: 0 keys pressed
Exception: 5 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Aug 30 2016 at 19:39:55
========================================================================
perl -I../.. ../../tests/userprog/read-zero.ck tests/userprog/read-zero tests/userprog/read-zero.result
FAIL tests/userprog/read-zero
Kernel panic in run: PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c5ad 0xc002c786 0xc00220e6 0xc002221f 0x804a23f 0x80480ea 0x8048144 0x804878c
Translation of call stack:
In kernel.o:
0xc0028cdc: debug_panic (.../../lib/kernel/debug.c:38)
0xc0023a87: block_to_arena (..../../threads/malloc.c:279)
0xc0023b87: free (..../../threads/malloc.c:224)
0xc002e7e4: vm_destory_func (.../build/../../vm/page.c:26)
0xc002a8dd: hash_clear (..../../lib/kernel/hash.c:63)
0xc002a928: hash_destroy (..../../lib/kernel/hash.c:91)
0xc002e7d1: vm_destroy (.../build/../../vm/page.c:65)
0xc002adc3: process_exit (...../userprog/process.c:274)
0xc00215a5: thread_exit (..../../threads/thread.c:334)
0xc002c4e7: create (...../userprog/syscall.c:177)
0xc002c5ad: check_valid_buffer (...../userprog/syscall.c:110)
0xc002c786: syscall_handler (.../../userprog/syscall.c:66)
0xc00220e6: intr_handler (..../threads/interrupt.c:367)
0xc002221f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/read-zero:
0x0804a23f: read (...../lib/user/syscall.c:117)
0x080480ea: test_main (...s/userprog/read-zero.c:18)
0x08048144: main (...ild/../../tests/main.c:13)
0x0804878c: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
gcc -m32 -c ../../tests/userprog/read-stdout.c -o tests/userprog/read-stdout.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/read-stdout.d
gcc -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/read-stdout.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/read-stdout
pintos -v -k -T 120 --bochs  --filesys-size=2 -p tests/userprog/read-stdout -a read-stdout --swap-size=4 -- -q    -f run read-stdout < /dev/null 2> tests/userprog/read-stdout.errors |tee tests/userprog/read-stdout.output
Copying tests/userprog/read-stdout to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading.........
Kernel command line: -q -f extract run read-stdout
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 13,104 sectors (6 MB), model "BXHD00011", serial "Generic 1234"
hda1: 155 sectors (77 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 100 sectors (50 kB), Pintos scratch (22)
hda4: 8,192 sectors (4 MB), Pintos swap (23)
filesys: using hda2
scratch: using hda3
swap: using hda4
HI
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'read-stdout' into the file system...
Erasing ustar archive...
Executing 'read-stdout':
(read-stdout) begin
read-stdout: exit(-1)
Kernel PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c5ad 0xc002c786 0xc00220e6 0xc002221f 0x804a1ef 0x80480c1 0x80480f4 0x804873c.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 283 ticks
Thread: 49 idle ticks, 204 kernel ticks, 30 user ticks
hda2 (filesys): 63 reads, 204 writes
hda3 (scratch): 99 reads, 2 writes
hda4 (swap): 0 reads, 0 writes
Console: 1458 characters output
Keyboard: 0 keys pressed
Exception: 5 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Aug 30 2016 at 19:39:55
========================================================================
perl -I../.. ../../tests/userprog/read-stdout.ck tests/userprog/read-stdout tests/userprog/read-stdout.result
FAIL tests/userprog/read-stdout
Kernel panic in run: PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c5ad 0xc002c786 0xc00220e6 0xc002221f 0x804a1ef 0x80480c1 0x80480f4 0x804873c
Translation of call stack:
In kernel.o:
0xc0028cdc: debug_panic (.../../lib/kernel/debug.c:38)
0xc0023a87: block_to_arena (..../../threads/malloc.c:279)
0xc0023b87: free (..../../threads/malloc.c:224)
0xc002e7e4: vm_destory_func (.../build/../../vm/page.c:26)
0xc002a8dd: hash_clear (..../../lib/kernel/hash.c:63)
0xc002a928: hash_destroy (..../../lib/kernel/hash.c:91)
0xc002e7d1: vm_destroy (.../build/../../vm/page.c:65)
0xc002adc3: process_exit (...../userprog/process.c:274)
0xc00215a5: thread_exit (..../../threads/thread.c:334)
0xc002c4e7: create (...../userprog/syscall.c:177)
0xc002c5ad: check_valid_buffer (...../userprog/syscall.c:110)
0xc002c786: syscall_handler (.../../userprog/syscall.c:66)
0xc00220e6: intr_handler (..../threads/interrupt.c:367)
0xc002221f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/read-stdout:
0x0804a1ef: read (...../lib/user/syscall.c:117)
0x080480c1: test_main (...userprog/read-stdout.c:14)
0x080480f4: main (...ild/../../tests/main.c:13)
0x0804873c: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
gcc -m32 -c ../../tests/userprog/read-bad-fd.c -o tests/userprog/read-bad-fd.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/read-bad-fd.d
gcc -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/read-bad-fd.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/read-bad-fd
pintos -v -k -T 120 --bochs  --filesys-size=2 -p tests/userprog/read-bad-fd -a read-bad-fd --swap-size=4 -- -q    -f run read-bad-fd < /dev/null 2> tests/userprog/read-bad-fd.errors |tee tests/userprog/read-bad-fd.output
Copying tests/userprog/read-bad-fd to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading.........
Kernel command line: -q -f extract run read-bad-fd
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 13,104 sectors (6 MB), model "BXHD00011", serial "Generic 1234"
hda1: 155 sectors (77 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 101 sectors (50 kB), Pintos scratch (22)
hda4: 8,192 sectors (4 MB), Pintos swap (23)
filesys: using hda2
scratch: using hda3
swap: using hda4
HI
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'read-bad-fd' into the file system...
Erasing ustar archive...
Executing 'read-bad-fd':
(read-bad-fd) begin
read-bad-fd: exit(-1)
Kernel PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c5ad 0xc002c786 0xc00220e6 0xc002221f 0x804a27f 0x80480c2 0x8048188 0x80487cc.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 284 ticks
Thread: 51 idle ticks, 203 kernel ticks, 30 user ticks
hda2 (filesys): 63 reads, 206 writes
hda3 (scratch): 100 reads, 2 writes
hda4 (swap): 0 reads, 0 writes
Console: 1459 characters output
Keyboard: 0 keys pressed
Exception: 5 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Aug 30 2016 at 19:39:55
========================================================================
perl -I../.. ../../tests/userprog/read-bad-fd.ck tests/userprog/read-bad-fd tests/userprog/read-bad-fd.result
FAIL tests/userprog/read-bad-fd
Kernel panic in run: PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c5ad 0xc002c786 0xc00220e6 0xc002221f 0x804a27f 0x80480c2 0x8048188 0x80487cc
Translation of call stack:
In kernel.o:
0xc0028cdc: debug_panic (.../../lib/kernel/debug.c:38)
0xc0023a87: block_to_arena (..../../threads/malloc.c:279)
0xc0023b87: free (..../../threads/malloc.c:224)
0xc002e7e4: vm_destory_func (.../build/../../vm/page.c:26)
0xc002a8dd: hash_clear (..../../lib/kernel/hash.c:63)
0xc002a928: hash_destroy (..../../lib/kernel/hash.c:91)
0xc002e7d1: vm_destroy (.../build/../../vm/page.c:65)
0xc002adc3: process_exit (...../userprog/process.c:274)
0xc00215a5: thread_exit (..../../threads/thread.c:334)
0xc002c4e7: create (...../userprog/syscall.c:177)
0xc002c5ad: check_valid_buffer (...../userprog/syscall.c:110)
0xc002c786: syscall_handler (.../../userprog/syscall.c:66)
0xc00220e6: intr_handler (..../threads/interrupt.c:367)
0xc002221f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/read-bad-fd:
0x0804a27f: read (...../lib/user/syscall.c:117)
0x080480c2: test_main (...userprog/read-bad-fd.c:15)
0x08048188: main (...ild/../../tests/main.c:13)
0x080487cc: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
gcc -m32 -c ../../tests/userprog/write-normal.c -o tests/userprog/write-normal.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/write-normal.d
gcc -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/write-normal.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/write-normal
pintos -v -k -T 120 --bochs  --filesys-size=2 -p tests/userprog/write-normal -a write-normal -p ../../tests/userprog/sample.txt -a sample.txt --swap-size=4 -- -q    -f run write-normal < /dev/null 2> tests/userprog/write-normal.errors |tee tests/userprog/write-normal.output
Copying tests/userprog/write-normal to scratch partition...
Copying ../../tests/userprog/sample.txt to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading.........
Kernel command line: -q -f extract run write-normal
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 13,104 sectors (6 MB), model "BXHD00011", serial "Generic 1234"
hda1: 155 sectors (77 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 104 sectors (52 kB), Pintos scratch (22)
hda4: 8,192 sectors (4 MB), Pintos swap (23)
filesys: using hda2
scratch: using hda3
swap: using hda4
HI
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'write-normal' into the file system...
Putting 'sample.txt' into the file system...
Erasing ustar archive...
Executing 'write-normal':
(write-normal) begin
(write-normal) create "test.txt"
(write-normal) open "test.txt"
(write-normal) end
write-normal: exit(0)
Kernel PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c642 0xc00220e6 0xc002221f 0x804a339 0x80487b4.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 343 ticks
Thread: 50 idle ticks, 230 kernel ticks, 63 user ticks
hda2 (filesys): 115 reads, 220 writes
hda3 (scratch): 103 reads, 2 writes
hda4 (swap): 0 reads, 0 writes
Console: 1561 characters output
Keyboard: 0 keys pressed
Exception: 5 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Aug 30 2016 at 19:39:55
========================================================================
perl -I../.. ../../tests/userprog/write-normal.ck tests/userprog/write-normal tests/userprog/write-normal.result
FAIL tests/userprog/write-normal
Kernel panic in run: PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c642 0xc00220e6 0xc002221f 0x804a339 0x80487b4
Translation of call stack:
In kernel.o:
0xc0028cdc: debug_panic (.../../lib/kernel/debug.c:38)
0xc0023a87: block_to_arena (..../../threads/malloc.c:279)
0xc0023b87: free (..../../threads/malloc.c:224)
0xc002e7e4: vm_destory_func (.../build/../../vm/page.c:26)
0xc002a8dd: hash_clear (..../../lib/kernel/hash.c:63)
0xc002a928: hash_destroy (..../../lib/kernel/hash.c:91)
0xc002e7d1: vm_destroy (.../build/../../vm/page.c:65)
0xc002adc3: process_exit (...../userprog/process.c:274)
0xc00215a5: thread_exit (..../../threads/thread.c:334)
0xc002c4e7: create (...../userprog/syscall.c:177)
0xc002c642: syscall_handler (.../../userprog/syscall.c:42)
0xc00220e6: intr_handler (..../threads/interrupt.c:367)
0xc002221f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/write-normal:
0x0804a339: exit (.../../lib/user/syscall.c:74)
0x080487b4: random_init (...ild/../../lib/random.c:35)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
gcc -m32 -c ../../tests/userprog/write-bad-ptr.c -o tests/userprog/write-bad-ptr.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/write-bad-ptr.d
gcc -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/write-bad-ptr.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/write-bad-ptr
pintos -v -k -T 120 --bochs  --filesys-size=2 -p tests/userprog/write-bad-ptr -a write-bad-ptr -p ../../tests/userprog/sample.txt -a sample.txt --swap-size=4 -- -q    -f run write-bad-ptr < /dev/null 2> tests/userprog/write-bad-ptr.errors |tee tests/userprog/write-bad-ptr.output
Copying tests/userprog/write-bad-ptr to scratch partition...
Copying ../../tests/userprog/sample.txt to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading.........
Kernel command line: -q -f extract run write-bad-ptr
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 13,104 sectors (6 MB), model "BXHD00011", serial "Generic 1234"
hda1: 155 sectors (77 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 103 sectors (51 kB), Pintos scratch (22)
hda4: 8,192 sectors (4 MB), Pintos swap (23)
filesys: using hda2
scratch: using hda3
swap: using hda4
HI
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'write-bad-ptr' into the file system...
Putting 'sample.txt' into the file system...
Erasing ustar archive...
Executing 'write-bad-ptr':
(write-bad-ptr) begin
(write-bad-ptr) open "sample.txt"
write-bad-ptr: exit(-1)
Kernel PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c5ad 0xc002c7df 0xc00220e6 0xc002221f 0x804a234 0x80480e7 0x8048124 0x804876c.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 319 ticks
Thread: 54 idle ticks, 226 kernel ticks, 39 user ticks
hda2 (filesys): 92 reads, 212 writes
hda3 (scratch): 102 reads, 2 writes
hda4 (swap): 0 reads, 0 writes
Console: 1548 characters output
Keyboard: 0 keys pressed
Exception: 5 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Aug 30 2016 at 19:39:55
========================================================================
perl -I../.. ../../tests/userprog/write-bad-ptr.ck tests/userprog/write-bad-ptr tests/userprog/write-bad-ptr.result
FAIL tests/userprog/write-bad-ptr
Kernel panic in run: PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c5ad 0xc002c7df 0xc00220e6 0xc002221f 0x804a234 0x80480e7 0x8048124 0x804876c
Translation of call stack:
In kernel.o:
0xc0028cdc: debug_panic (.../../lib/kernel/debug.c:38)
0xc0023a87: block_to_arena (..../../threads/malloc.c:279)
0xc0023b87: free (..../../threads/malloc.c:224)
0xc002e7e4: vm_destory_func (.../build/../../vm/page.c:26)
0xc002a8dd: hash_clear (..../../lib/kernel/hash.c:63)
0xc002a928: hash_destroy (..../../lib/kernel/hash.c:91)
0xc002e7d1: vm_destroy (.../build/../../vm/page.c:65)
0xc002adc3: process_exit (...../userprog/process.c:274)
0xc00215a5: thread_exit (..../../threads/thread.c:334)
0xc002c4e7: create (...../userprog/syscall.c:177)
0xc002c5ad: check_valid_buffer (...../userprog/syscall.c:110)
0xc002c7df: syscall_handler (.../../userprog/syscall.c:71)
0xc00220e6: intr_handler (..../threads/interrupt.c:367)
0xc002221f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/write-bad-ptr:
0x0804a234: write (...../lib/user/syscall.c:123)
0x080480e7: test_main (...erprog/write-bad-ptr.c:15)
0x08048124: main (...ild/../../tests/main.c:13)
0x0804876c: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
gcc -m32 -c ../../tests/userprog/write-boundary.c -o tests/userprog/write-boundary.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/write-boundary.d
gcc -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/write-boundary.o tests/userprog/boundary.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/write-boundary
pintos -v -k -T 120 --bochs  --filesys-size=2 -p tests/userprog/write-boundary -a write-boundary -p ../../tests/userprog/sample.txt -a sample.txt --swap-size=4 -- -q    -f run write-boundary < /dev/null 2> tests/userprog/write-boundary.errors |tee tests/userprog/write-boundary.output
Copying tests/userprog/write-boundary to scratch partition...
Copying ../../tests/userprog/sample.txt to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading.........
Kernel command line: -q -f extract run write-boundary
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 13,104 sectors (6 MB), model "BXHD00011", serial "Generic 1234"
hda1: 155 sectors (77 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 106 sectors (53 kB), Pintos scratch (22)
hda4: 8,192 sectors (4 MB), Pintos swap (23)
filesys: using hda2
scratch: using hda3
swap: using hda4
HI
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'write-boundary' into the file system...
Putting 'sample.txt' into the file system...
Erasing ustar archive...
Executing 'write-boundary':
(write-boundary) begin
(write-boundary) open "sample.txt"
(write-boundary) end
write-boundary: exit(0)
Kernel PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c642 0xc00220e6 0xc002221f 0x804a3a9 0x8048824.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 328 ticks
Thread: 52 idle ticks, 230 kernel ticks, 46 user ticks
hda2 (filesys): 94 reads, 219 writes
hda3 (scratch): 105 reads, 2 writes
hda4 (swap): 0 reads, 0 writes
Console: 1543 characters output
Keyboard: 0 keys pressed
Exception: 7 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Aug 30 2016 at 19:39:55
========================================================================
perl -I../.. ../../tests/userprog/write-boundary.ck tests/userprog/write-boundary tests/userprog/write-boundary.result
FAIL tests/userprog/write-boundary
Kernel panic in run: PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c642 0xc00220e6 0xc002221f 0x804a3a9 0x8048824
Translation of call stack:
In kernel.o:
0xc0028cdc: debug_panic (.../../lib/kernel/debug.c:38)
0xc0023a87: block_to_arena (..../../threads/malloc.c:279)
0xc0023b87: free (..../../threads/malloc.c:224)
0xc002e7e4: vm_destory_func (.../build/../../vm/page.c:26)
0xc002a8dd: hash_clear (..../../lib/kernel/hash.c:63)
0xc002a928: hash_destroy (..../../lib/kernel/hash.c:91)
0xc002e7d1: vm_destroy (.../build/../../vm/page.c:65)
0xc002adc3: process_exit (...../userprog/process.c:274)
0xc00215a5: thread_exit (..../../threads/thread.c:334)
0xc002c4e7: create (...../userprog/syscall.c:177)
0xc002c642: syscall_handler (.../../userprog/syscall.c:42)
0xc00220e6: intr_handler (..../threads/interrupt.c:367)
0xc002221f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/write-boundary:
0x0804a3a9: exit (.../../lib/user/syscall.c:74)
0x08048824: random_init (...ild/../../lib/random.c:35)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
gcc -m32 -c ../../tests/userprog/write-zero.c -o tests/userprog/write-zero.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/write-zero.d
gcc -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/write-zero.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/write-zero
pintos -v -k -T 120 --bochs  --filesys-size=2 -p tests/userprog/write-zero -a write-zero -p ../../tests/userprog/sample.txt -a sample.txt --swap-size=4 -- -q    -f run write-zero < /dev/null 2> tests/userprog/write-zero.errors |tee tests/userprog/write-zero.output
Copying tests/userprog/write-zero to scratch partition...
Copying ../../tests/userprog/sample.txt to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading.........
Kernel command line: -q -f extract run write-zero
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 13,104 sectors (6 MB), model "BXHD00011", serial "Generic 1234"
hda1: 155 sectors (77 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 103 sectors (51 kB), Pintos scratch (22)
hda4: 8,192 sectors (4 MB), Pintos swap (23)
filesys: using hda2
scratch: using hda3
swap: using hda4
HI
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'write-zero' into the file system...
Putting 'sample.txt' into the file system...
Erasing ustar archive...
Executing 'write-zero':
(write-zero) begin
(write-zero) open "sample.txt"
write-zero: exit(-1)
Kernel PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c5ad 0xc002c7df 0xc00220e6 0xc002221f 0x804a244 0x80480ea 0x8048130 0x804877c.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 318 ticks
Thread: 50 idle ticks, 229 kernel ticks, 39 user ticks
hda2 (filesys): 92 reads, 212 writes
hda3 (scratch): 102 reads, 2 writes
hda4 (swap): 0 reads, 0 writes
Console: 1530 characters output
Keyboard: 0 keys pressed
Exception: 5 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Aug 30 2016 at 19:39:55
========================================================================
perl -I../.. ../../tests/userprog/write-zero.ck tests/userprog/write-zero tests/userprog/write-zero.result
FAIL tests/userprog/write-zero
Kernel panic in run: PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c5ad 0xc002c7df 0xc00220e6 0xc002221f 0x804a244 0x80480ea 0x8048130 0x804877c
Translation of call stack:
In kernel.o:
0xc0028cdc: debug_panic (.../../lib/kernel/debug.c:38)
0xc0023a87: block_to_arena (..../../threads/malloc.c:279)
0xc0023b87: free (..../../threads/malloc.c:224)
0xc002e7e4: vm_destory_func (.../build/../../vm/page.c:26)
0xc002a8dd: hash_clear (..../../lib/kernel/hash.c:63)
0xc002a928: hash_destroy (..../../lib/kernel/hash.c:91)
0xc002e7d1: vm_destroy (.../build/../../vm/page.c:65)
0xc002adc3: process_exit (...../userprog/process.c:274)
0xc00215a5: thread_exit (..../../threads/thread.c:334)
0xc002c4e7: create (...../userprog/syscall.c:177)
0xc002c5ad: check_valid_buffer (...../userprog/syscall.c:110)
0xc002c7df: syscall_handler (.../../userprog/syscall.c:71)
0xc00220e6: intr_handler (..../threads/interrupt.c:367)
0xc002221f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/write-zero:
0x0804a244: write (...../lib/user/syscall.c:123)
0x080480ea: test_main (.../userprog/write-zero.c:18)
0x08048130: main (...ild/../../tests/main.c:13)
0x0804877c: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
gcc -m32 -c ../../tests/userprog/write-stdin.c -o tests/userprog/write-stdin.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/write-stdin.d
gcc -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/write-stdin.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/write-stdin
pintos -v -k -T 120 --bochs  --filesys-size=2 -p tests/userprog/write-stdin -a write-stdin --swap-size=4 -- -q    -f run write-stdin < /dev/null 2> tests/userprog/write-stdin.errors |tee tests/userprog/write-stdin.output
Copying tests/userprog/write-stdin to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading.........
Kernel command line: -q -f extract run write-stdin
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 13,104 sectors (6 MB), model "BXHD00011", serial "Generic 1234"
hda1: 155 sectors (77 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 100 sectors (50 kB), Pintos scratch (22)
hda4: 8,192 sectors (4 MB), Pintos swap (23)
filesys: using hda2
scratch: using hda3
swap: using hda4
HI
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'write-stdin' into the file system...
Erasing ustar archive...
Executing 'write-stdin':
(write-stdin) begin
write-stdin: exit(-1)
Kernel PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c5ad 0xc002c7df 0xc00220e6 0xc002221f 0x804a204 0x80480c5 0x80480f8 0x804873c.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 283 ticks
Thread: 49 idle ticks, 204 kernel ticks, 30 user ticks
hda2 (filesys): 63 reads, 204 writes
hda3 (scratch): 99 reads, 2 writes
hda4 (swap): 0 reads, 0 writes
Console: 1458 characters output
Keyboard: 0 keys pressed
Exception: 5 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Aug 30 2016 at 19:39:55
========================================================================
perl -I../.. ../../tests/userprog/write-stdin.ck tests/userprog/write-stdin tests/userprog/write-stdin.result
FAIL tests/userprog/write-stdin
Kernel panic in run: PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c5ad 0xc002c7df 0xc00220e6 0xc002221f 0x804a204 0x80480c5 0x80480f8 0x804873c
Translation of call stack:
In kernel.o:
0xc0028cdc: debug_panic (.../../lib/kernel/debug.c:38)
0xc0023a87: block_to_arena (..../../threads/malloc.c:279)
0xc0023b87: free (..../../threads/malloc.c:224)
0xc002e7e4: vm_destory_func (.../build/../../vm/page.c:26)
0xc002a8dd: hash_clear (..../../lib/kernel/hash.c:63)
0xc002a928: hash_destroy (..../../lib/kernel/hash.c:91)
0xc002e7d1: vm_destroy (.../build/../../vm/page.c:65)
0xc002adc3: process_exit (...../userprog/process.c:274)
0xc00215a5: thread_exit (..../../threads/thread.c:334)
0xc002c4e7: create (...../userprog/syscall.c:177)
0xc002c5ad: check_valid_buffer (...../userprog/syscall.c:110)
0xc002c7df: syscall_handler (.../../userprog/syscall.c:71)
0xc00220e6: intr_handler (..../threads/interrupt.c:367)
0xc002221f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/write-stdin:
0x0804a204: write (...../lib/user/syscall.c:123)
0x080480c5: test_main (...userprog/write-stdin.c:14)
0x080480f8: main (...ild/../../tests/main.c:13)
0x0804873c: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
gcc -m32 -c ../../tests/userprog/write-bad-fd.c -o tests/userprog/write-bad-fd.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/write-bad-fd.d
gcc -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/write-bad-fd.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/write-bad-fd
pintos -v -k -T 120 --bochs  --filesys-size=2 -p tests/userprog/write-bad-fd -a write-bad-fd --swap-size=4 -- -q    -f run write-bad-fd < /dev/null 2> tests/userprog/write-bad-fd.errors |tee tests/userprog/write-bad-fd.output
Copying tests/userprog/write-bad-fd to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading.........
Kernel command line: -q -f extract run write-bad-fd
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 13,104 sectors (6 MB), model "BXHD00011", serial "Generic 1234"
hda1: 155 sectors (77 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 101 sectors (50 kB), Pintos scratch (22)
hda4: 8,192 sectors (4 MB), Pintos swap (23)
filesys: using hda2
scratch: using hda3
swap: using hda4
HI
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'write-bad-fd' into the file system...
Erasing ustar archive...
Executing 'write-bad-fd':
(write-bad-fd) begin
write-bad-fd: exit(-1)
Kernel PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c5ad 0xc002c7df 0xc00220e6 0xc002221f 0x804a294 0x80480c6 0x804818c 0x80487cc.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 284 ticks
Thread: 51 idle ticks, 204 kernel ticks, 29 user ticks
hda2 (filesys): 63 reads, 206 writes
hda3 (scratch): 100 reads, 2 writes
hda4 (swap): 0 reads, 0 writes
Console: 1464 characters output
Keyboard: 0 keys pressed
Exception: 5 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Aug 30 2016 at 19:39:55
========================================================================
perl -I../.. ../../tests/userprog/write-bad-fd.ck tests/userprog/write-bad-fd tests/userprog/write-bad-fd.result
FAIL tests/userprog/write-bad-fd
Kernel panic in run: PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c5ad 0xc002c7df 0xc00220e6 0xc002221f 0x804a294 0x80480c6 0x804818c 0x80487cc
Translation of call stack:
In kernel.o:
0xc0028cdc: debug_panic (.../../lib/kernel/debug.c:38)
0xc0023a87: block_to_arena (..../../threads/malloc.c:279)
0xc0023b87: free (..../../threads/malloc.c:224)
0xc002e7e4: vm_destory_func (.../build/../../vm/page.c:26)
0xc002a8dd: hash_clear (..../../lib/kernel/hash.c:63)
0xc002a928: hash_destroy (..../../lib/kernel/hash.c:91)
0xc002e7d1: vm_destroy (.../build/../../vm/page.c:65)
0xc002adc3: process_exit (...../userprog/process.c:274)
0xc00215a5: thread_exit (..../../threads/thread.c:334)
0xc002c4e7: create (...../userprog/syscall.c:177)
0xc002c5ad: check_valid_buffer (...../userprog/syscall.c:110)
0xc002c7df: syscall_handler (.../../userprog/syscall.c:71)
0xc00220e6: intr_handler (..../threads/interrupt.c:367)
0xc002221f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/write-bad-fd:
0x0804a294: write (...../lib/user/syscall.c:123)
0x080480c6: test_main (...serprog/write-bad-fd.c:14)
0x0804818c: main (...ild/../../tests/main.c:13)
0x080487cc: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
gcc -m32 -c ../../tests/userprog/exec-once.c -o tests/userprog/exec-once.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/exec-once.d
gcc -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/exec-once.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/exec-once
gcc -m32 -c ../../tests/userprog/child-simple.c -o tests/userprog/child-simple.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/child-simple.d
gcc -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/child-simple.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/child-simple
pintos -v -k -T 120 --bochs  --filesys-size=2 -p tests/userprog/exec-once -a exec-once -p tests/userprog/child-simple -a child-simple --swap-size=4 -- -q    -f run exec-once < /dev/null 2> tests/userprog/exec-once.errors |tee tests/userprog/exec-once.output
Copying tests/userprog/exec-once to scratch partition...
Copying tests/userprog/child-simple to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading.........
Kernel command line: -q -f extract run exec-once
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 13,104 sectors (6 MB), model "BXHD00011", serial "Generic 1234"
hda1: 155 sectors (77 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 197 sectors (98 kB), Pintos scratch (22)
hda4: 8,192 sectors (4 MB), Pintos swap (23)
filesys: using hda2
scratch: using hda3
swap: using hda4
HI
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'exec-once' into the file system...
Putting 'child-simple' into the file system...
Erasing ustar archive...
Executing 'exec-once':
(exec-once) begin
(child-simple) run
child-simple: exit(81)
Kernel PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c642 0xc00220e6 0xc002221f 0x804a279 0x80486f4.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 416 ticks
Thread: 69 idle ticks, 282 kernel ticks, 65 user ticks
hda2 (filesys): 124 reads, 400 writes
hda3 (scratch): 196 reads, 2 writes
hda4 (swap): 0 reads, 0 writes
Console: 1488 characters output
Keyboard: 0 keys pressed
Exception: 9 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Aug 30 2016 at 19:39:55
========================================================================
perl -I../.. ../../tests/userprog/exec-once.ck tests/userprog/exec-once tests/userprog/exec-once.result
FAIL tests/userprog/exec-once
Kernel panic in run: PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c642 0xc00220e6 0xc002221f 0x804a279 0x80486f4
Translation of call stack:
In kernel.o:
0xc0028cdc: debug_panic (.../../lib/kernel/debug.c:38)
0xc0023a87: block_to_arena (..../../threads/malloc.c:279)
0xc0023b87: free (..../../threads/malloc.c:224)
0xc002e7e4: vm_destory_func (.../build/../../vm/page.c:26)
0xc002a8dd: hash_clear (..../../lib/kernel/hash.c:63)
0xc002a928: hash_destroy (..../../lib/kernel/hash.c:91)
0xc002e7d1: vm_destroy (.../build/../../vm/page.c:65)
0xc002adc3: process_exit (...../userprog/process.c:274)
0xc00215a5: thread_exit (..../../threads/thread.c:334)
0xc002c4e7: create (...../userprog/syscall.c:177)
0xc002c642: syscall_handler (.../../userprog/syscall.c:42)
0xc00220e6: intr_handler (..../threads/interrupt.c:367)
0xc002221f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/exec-once:
0x0804a279: readdir (...../lib/user/syscall.c:171)
0x080486f4: exec_children (...uild/../../tests/lib.c:88)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
gcc -m32 -c ../../tests/userprog/exec-arg.c -o tests/userprog/exec-arg.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/exec-arg.d
gcc -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/exec-arg.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/exec-arg
gcc -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/args.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/child-args
pintos -v -k -T 120 --bochs  --filesys-size=2 -p tests/userprog/exec-arg -a exec-arg -p tests/userprog/child-args -a child-args --swap-size=4 -- -q    -f run exec-arg < /dev/null 2> tests/userprog/exec-arg.errors |tee tests/userprog/exec-arg.output
Copying tests/userprog/exec-arg to scratch partition...
Copying tests/userprog/child-args to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading.........
Kernel command line: -q -f extract run exec-arg
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 13,104 sectors (6 MB), model "BXHD00011", serial "Generic 1234"
hda1: 155 sectors (77 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 198 sectors (99 kB), Pintos scratch (22)
hda4: 8,192 sectors (4 MB), Pintos swap (23)
filesys: using hda2
scratch: using hda3
swap: using hda4
HI
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'exec-arg' into the file system...
Putting 'child-args' into the file system...
Erasing ustar archive...
Executing 'exec-arg':
(exec-arg) begin
(args) begin
(args) argc = 2
(args) argv[0] = 'child-args'
(args) argv[1] = 'childarg'
(args) argv[2] = null
(args) end
child-args: exit(0)
Kernel PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c642 0xc00220e6 0xc002221f 0x804a2e9 0x8048764.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 434 ticks
Thread: 68 idle ticks, 282 kernel ticks, 84 user ticks
hda2 (filesys): 126 reads, 402 writes
hda3 (scratch): 197 reads, 2 writes
hda4 (swap): 0 reads, 0 writes
Console: 1580 characters output
Keyboard: 0 keys pressed
Exception: 10 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Aug 30 2016 at 19:39:55
========================================================================
perl -I../.. ../../tests/userprog/exec-arg.ck tests/userprog/exec-arg tests/userprog/exec-arg.result
FAIL tests/userprog/exec-arg
Kernel panic in run: PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c642 0xc00220e6 0xc002221f 0x804a2e9 0x8048764
Translation of call stack:
In kernel.o:
0xc0028cdc: debug_panic (.../../lib/kernel/debug.c:38)
0xc0023a87: block_to_arena (..../../threads/malloc.c:279)
0xc0023b87: free (..../../threads/malloc.c:224)
0xc002e7e4: vm_destory_func (.../build/../../vm/page.c:26)
0xc002a8dd: hash_clear (..../../lib/kernel/hash.c:63)
0xc002a928: hash_destroy (..../../lib/kernel/hash.c:91)
0xc002e7d1: vm_destroy (.../build/../../vm/page.c:65)
0xc002adc3: process_exit (...../userprog/process.c:274)
0xc00215a5: thread_exit (..../../threads/thread.c:334)
0xc002c4e7: create (...../userprog/syscall.c:177)
0xc002c642: syscall_handler (.../../userprog/syscall.c:42)
0xc00220e6: intr_handler (..../threads/interrupt.c:367)
0xc002221f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/exec-arg:
0x0804a2e9: halt (.../../lib/user/syscall.c:67)
0x08048764: random_init (...ild/../../lib/random.c:44)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
gcc -m32 -c ../../tests/userprog/exec-multiple.c -o tests/userprog/exec-multiple.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/exec-multiple.d
gcc -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/exec-multiple.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/exec-multiple
pintos -v -k -T 120 --bochs  --filesys-size=2 -p tests/userprog/exec-multiple -a exec-multiple -p tests/userprog/child-simple -a child-simple --swap-size=4 -- -q    -f run exec-multiple < /dev/null 2> tests/userprog/exec-multiple.errors |tee tests/userprog/exec-multiple.output
Copying tests/userprog/exec-multiple to scratch partition...
Copying tests/userprog/child-simple to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading.........
Kernel command line: -q -f extract run exec-multiple
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 13,104 sectors (6 MB), model "BXHD00011", serial "Generic 1234"
hda1: 155 sectors (77 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 197 sectors (98 kB), Pintos scratch (22)
hda4: 8,192 sectors (4 MB), Pintos swap (23)
filesys: using hda2
scratch: using hda3
swap: using hda4
HI
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'exec-multiple' into the file system...
Putting 'child-simple' into the file system...
Erasing ustar archive...
Executing 'exec-multiple':
(exec-multiple) begin
(child-simple) run
child-simple: exit(81)
Kernel PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c642 0xc00220e6 0xc002221f 0x804a279 0x80486f4.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 418 ticks
Thread: 70 idle ticks, 282 kernel ticks, 66 user ticks
hda2 (filesys): 124 reads, 400 writes
hda3 (scratch): 196 reads, 2 writes
hda4 (swap): 0 reads, 0 writes
Console: 1504 characters output
Keyboard: 0 keys pressed
Exception: 9 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Aug 30 2016 at 19:39:55
========================================================================
perl -I../.. ../../tests/userprog/exec-multiple.ck tests/userprog/exec-multiple tests/userprog/exec-multiple.result
FAIL tests/userprog/exec-multiple
Kernel panic in run: PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c642 0xc00220e6 0xc002221f 0x804a279 0x80486f4
Translation of call stack:
In kernel.o:
0xc0028cdc: debug_panic (.../../lib/kernel/debug.c:38)
0xc0023a87: block_to_arena (..../../threads/malloc.c:279)
0xc0023b87: free (..../../threads/malloc.c:224)
0xc002e7e4: vm_destory_func (.../build/../../vm/page.c:26)
0xc002a8dd: hash_clear (..../../lib/kernel/hash.c:63)
0xc002a928: hash_destroy (..../../lib/kernel/hash.c:91)
0xc002e7d1: vm_destroy (.../build/../../vm/page.c:65)
0xc002adc3: process_exit (...../userprog/process.c:274)
0xc00215a5: thread_exit (..../../threads/thread.c:334)
0xc002c4e7: create (...../userprog/syscall.c:177)
0xc002c642: syscall_handler (.../../userprog/syscall.c:42)
0xc00220e6: intr_handler (..../threads/interrupt.c:367)
0xc002221f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/exec-multiple:
0x0804a279: mmap (...../lib/user/syscall.c:148)
0x080486f4: exec_children (...uild/../../tests/lib.c:87)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
gcc -m32 -c ../../tests/userprog/exec-missing.c -o tests/userprog/exec-missing.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/exec-missing.d
gcc -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/exec-missing.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/exec-missing
pintos -v -k -T 120 --bochs  --filesys-size=2 -p tests/userprog/exec-missing -a exec-missing --swap-size=4 -- -q    -f run exec-missing < /dev/null 2> tests/userprog/exec-missing.errors |tee tests/userprog/exec-missing.output
Copying tests/userprog/exec-missing to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading.........
Kernel command line: -q -f extract run exec-missing
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 13,104 sectors (6 MB), model "BXHD00011", serial "Generic 1234"
hda1: 155 sectors (77 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 100 sectors (50 kB), Pintos scratch (22)
hda4: 8,192 sectors (4 MB), Pintos swap (23)
filesys: using hda2
scratch: using hda3
swap: using hda4
HI
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'exec-missing' into the file system...
Erasing ustar archive...
Executing 'exec-missing':
(exec-missing) begin
load: no-such-file: open failed
(exec-missing) exec("no-such-file"): -1
(exec-missing) end
exec-missing: exit(0)
Kernel PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c642 0xc00220e6 0xc002221f 0x804a2c9 0x8048744.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 322 ticks
Thread: 49 idle ticks, 209 kernel ticks, 64 user ticks
hda2 (filesys): 80 reads, 204 writes
hda3 (scratch): 99 reads, 2 writes
hda4 (swap): 0 reads, 0 writes
Console: 1522 characters output
Keyboard: 0 keys pressed
Exception: 5 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Aug 30 2016 at 19:39:55
========================================================================
perl -I../.. ../../tests/userprog/exec-missing.ck tests/userprog/exec-missing tests/userprog/exec-missing.result
FAIL tests/userprog/exec-missing
Kernel panic in run: PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c642 0xc00220e6 0xc002221f 0x804a2c9 0x8048744
Translation of call stack:
In kernel.o:
0xc0028cdc: debug_panic (.../../lib/kernel/debug.c:38)
0xc0023a87: block_to_arena (..../../threads/malloc.c:279)
0xc0023b87: free (..../../threads/malloc.c:224)
0xc002e7e4: vm_destory_func (.../build/../../vm/page.c:26)
0xc002a8dd: hash_clear (..../../lib/kernel/hash.c:63)
0xc002a928: hash_destroy (..../../lib/kernel/hash.c:91)
0xc002e7d1: vm_destroy (.../build/../../vm/page.c:65)
0xc002adc3: process_exit (...../userprog/process.c:274)
0xc00215a5: thread_exit (..../../threads/thread.c:334)
0xc002c4e7: create (...../userprog/syscall.c:177)
0xc002c642: syscall_handler (.../../userprog/syscall.c:42)
0xc00220e6: intr_handler (..../threads/interrupt.c:367)
0xc002221f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/exec-missing:
0x0804a2c9: exit (.../../lib/user/syscall.c:74)
0x08048744: random_init (...ild/../../lib/random.c:35)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
gcc -m32 -c ../../tests/userprog/exec-bad-ptr.c -o tests/userprog/exec-bad-ptr.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/exec-bad-ptr.d
gcc -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/exec-bad-ptr.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/exec-bad-ptr
pintos -v -k -T 120 --bochs  --filesys-size=2 -p tests/userprog/exec-bad-ptr -a exec-bad-ptr --swap-size=4 -- -q    -f run exec-bad-ptr < /dev/null 2> tests/userprog/exec-bad-ptr.errors |tee tests/userprog/exec-bad-ptr.output
Copying tests/userprog/exec-bad-ptr to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading.........
Kernel command line: -q -f extract run exec-bad-ptr
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 13,104 sectors (6 MB), model "BXHD00011", serial "Generic 1234"
hda1: 155 sectors (77 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 100 sectors (50 kB), Pintos scratch (22)
hda4: 8,192 sectors (4 MB), Pintos swap (23)
filesys: using hda2
scratch: using hda3
swap: using hda4
HI
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'exec-bad-ptr' into the file system...
Erasing ustar archive...
Executing 'exec-bad-ptr':
(exec-bad-ptr) begin
exec-bad-ptr: exit(-1)
Kernel PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c572 0xc002c6d2 0xc00220e6 0xc002221f 0x804a172 0x80480b2 0x80480e4 0x804872c.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 284 ticks
Thread: 49 idle ticks, 205 kernel ticks, 30 user ticks
hda2 (filesys): 62 reads, 204 writes
hda3 (scratch): 99 reads, 2 writes
hda4 (swap): 0 reads, 0 writes
Console: 1463 characters output
Keyboard: 0 keys pressed
Exception: 5 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Aug 30 2016 at 19:39:55
========================================================================
perl -I../.. ../../tests/userprog/exec-bad-ptr.ck tests/userprog/exec-bad-ptr tests/userprog/exec-bad-ptr.result
FAIL tests/userprog/exec-bad-ptr
Kernel panic in run: PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c572 0xc002c6d2 0xc00220e6 0xc002221f 0x804a172 0x80480b2 0x80480e4 0x804872c
Translation of call stack:
In kernel.o:
0xc0028cdc: debug_panic (.../../lib/kernel/debug.c:38)
0xc0023a87: block_to_arena (..../../threads/malloc.c:279)
0xc0023b87: free (..../../threads/malloc.c:224)
0xc002e7e4: vm_destory_func (.../build/../../vm/page.c:26)
0xc002a8dd: hash_clear (..../../lib/kernel/hash.c:63)
0xc002a928: hash_destroy (..../../lib/kernel/hash.c:91)
0xc002e7d1: vm_destroy (.../build/../../vm/page.c:65)
0xc002adc3: process_exit (...../userprog/process.c:274)
0xc00215a5: thread_exit (..../../threads/thread.c:334)
0xc002c4e7: create (...../userprog/syscall.c:177)
0xc002c572: check_valid_string (...../userprog/syscall.c:123)
0xc002c6d2: syscall_handler (.../../userprog/syscall.c:52)
0xc00220e6: intr_handler (..../threads/interrupt.c:367)
0xc002221f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/exec-bad-ptr:
0x0804a172: exec (.../../lib/user/syscall.c:81)
0x080480b2: test_main (...serprog/exec-bad-ptr.c:11)
0x080480e4: main (...ild/../../tests/main.c:13)
0x0804872c: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
gcc -m32 -c ../../tests/userprog/wait-simple.c -o tests/userprog/wait-simple.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/wait-simple.d
gcc -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/wait-simple.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/wait-simple
pintos -v -k -T 120 --bochs  --filesys-size=2 -p tests/userprog/wait-simple -a wait-simple -p tests/userprog/child-simple -a child-simple --swap-size=4 -- -q    -f run wait-simple < /dev/null 2> tests/userprog/wait-simple.errors |tee tests/userprog/wait-simple.output
Copying tests/userprog/wait-simple to scratch partition...
Copying tests/userprog/child-simple to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading.........
Kernel command line: -q -f extract run wait-simple
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 13,104 sectors (6 MB), model "BXHD00011", serial "Generic 1234"
hda1: 155 sectors (77 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 197 sectors (98 kB), Pintos scratch (22)
hda4: 8,192 sectors (4 MB), Pintos swap (23)
filesys: using hda2
scratch: using hda3
swap: using hda4
HI
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'wait-simple' into the file system...
Putting 'child-simple' into the file system...
Erasing ustar archive...
Executing 'wait-simple':
(wait-simple) begin
(child-simple) run
child-simple: exit(81)
Kernel PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c642 0xc00220e6 0xc002221f 0x804a279 0x80486f4.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 417 ticks
Thread: 68 idle ticks, 284 kernel ticks, 65 user ticks
hda2 (filesys): 124 reads, 400 writes
hda3 (scratch): 196 reads, 2 writes
hda4 (swap): 0 reads, 0 writes
Console: 1496 characters output
Keyboard: 0 keys pressed
Exception: 9 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Aug 30 2016 at 19:39:55
========================================================================
perl -I../.. ../../tests/userprog/wait-simple.ck tests/userprog/wait-simple tests/userprog/wait-simple.result
FAIL tests/userprog/wait-simple
Kernel panic in run: PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c642 0xc00220e6 0xc002221f 0x804a279 0x80486f4
Translation of call stack:
In kernel.o:
0xc0028cdc: debug_panic (.../../lib/kernel/debug.c:38)
0xc0023a87: block_to_arena (..../../threads/malloc.c:279)
0xc0023b87: free (..../../threads/malloc.c:224)
0xc002e7e4: vm_destory_func (.../build/../../vm/page.c:26)
0xc002a8dd: hash_clear (..../../lib/kernel/hash.c:63)
0xc002a928: hash_destroy (..../../lib/kernel/hash.c:91)
0xc002e7d1: vm_destroy (.../build/../../vm/page.c:65)
0xc002adc3: process_exit (...../userprog/process.c:274)
0xc00215a5: thread_exit (..../../threads/thread.c:334)
0xc002c4e7: create (...../userprog/syscall.c:177)
0xc002c642: syscall_handler (.../../userprog/syscall.c:42)
0xc00220e6: intr_handler (..../threads/interrupt.c:367)
0xc002221f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/wait-simple:
0x0804a279: mkdir (...../lib/user/syscall.c:165)
0x080486f4: exec_children (...uild/../../tests/lib.c:88)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
gcc -m32 -c ../../tests/userprog/wait-twice.c -o tests/userprog/wait-twice.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/wait-twice.d
gcc -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/wait-twice.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/wait-twice
pintos -v -k -T 120 --bochs  --filesys-size=2 -p tests/userprog/wait-twice -a wait-twice -p tests/userprog/child-simple -a child-simple --swap-size=4 -- -q    -f run wait-twice < /dev/null 2> tests/userprog/wait-twice.errors |tee tests/userprog/wait-twice.output
Copying tests/userprog/wait-twice to scratch partition...
Copying tests/userprog/child-simple to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading.........
Kernel command line: -q -f extract run wait-twice
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 13,104 sectors (6 MB), model "BXHD00011", serial "Generic 1234"
hda1: 155 sectors (77 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 198 sectors (99 kB), Pintos scratch (22)
hda4: 8,192 sectors (4 MB), Pintos swap (23)
filesys: using hda2
scratch: using hda3
swap: using hda4
HI
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'wait-twice' into the file system...
Putting 'child-simple' into the file system...
Erasing ustar archive...
Executing 'wait-twice':
(wait-twice) begin
(child-simple) run
child-simple: exit(81)
Kernel PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c642 0xc00220e6 0xc002221f 0x804a279 0x80486f4.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 417 ticks
Thread: 68 idle ticks, 283 kernel ticks, 66 user ticks
hda2 (filesys): 124 reads, 402 writes
hda3 (scratch): 197 reads, 2 writes
hda4 (swap): 0 reads, 0 writes
Console: 1492 characters output
Keyboard: 0 keys pressed
Exception: 9 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Aug 30 2016 at 19:39:55
========================================================================
perl -I../.. ../../tests/userprog/wait-twice.ck tests/userprog/wait-twice tests/userprog/wait-twice.result
FAIL tests/userprog/wait-twice
Kernel panic in run: PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c642 0xc00220e6 0xc002221f 0x804a279 0x80486f4
Translation of call stack:
In kernel.o:
0xc0028cdc: debug_panic (.../../lib/kernel/debug.c:38)
0xc0023a87: block_to_arena (..../../threads/malloc.c:279)
0xc0023b87: free (..../../threads/malloc.c:224)
0xc002e7e4: vm_destory_func (.../build/../../vm/page.c:26)
0xc002a8dd: hash_clear (..../../lib/kernel/hash.c:63)
0xc002a928: hash_destroy (..../../lib/kernel/hash.c:91)
0xc002e7d1: vm_destroy (.../build/../../vm/page.c:65)
0xc002adc3: process_exit (...../userprog/process.c:274)
0xc00215a5: thread_exit (..../../threads/thread.c:334)
0xc002c4e7: create (...../userprog/syscall.c:177)
0xc002c642: syscall_handler (.../../userprog/syscall.c:42)
0xc00220e6: intr_handler (..../threads/interrupt.c:367)
0xc002221f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/wait-twice:
0x0804a279: munmap (...../lib/user/syscall.c:154)
0x080486f4: exec_children (...uild/../../tests/lib.c:88)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
gcc -m32 -c ../../tests/userprog/wait-killed.c -o tests/userprog/wait-killed.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/wait-killed.d
gcc -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/wait-killed.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/wait-killed
gcc -m32 -c ../../tests/userprog/child-bad.c -o tests/userprog/child-bad.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/child-bad.d
gcc -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/child-bad.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/child-bad
pintos -v -k -T 120 --bochs  --filesys-size=2 -p tests/userprog/wait-killed -a wait-killed -p tests/userprog/child-bad -a child-bad --swap-size=4 -- -q    -f run wait-killed < /dev/null 2> tests/userprog/wait-killed.errors |tee tests/userprog/wait-killed.output
Copying tests/userprog/wait-killed to scratch partition...
Copying tests/userprog/child-bad to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading.........
Kernel command line: -q -f extract run wait-killed
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 13,104 sectors (6 MB), model "BXHD00011", serial "Generic 1234"
hda1: 155 sectors (77 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 198 sectors (99 kB), Pintos scratch (22)
hda4: 8,192 sectors (4 MB), Pintos swap (23)
filesys: using hda2
scratch: using hda3
swap: using hda4
HI
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'wait-killed' into the file system...
Putting 'child-bad' into the file system...
Erasing ustar archive...
Executing 'wait-killed':
(wait-killed) begin
(child-bad) begin

TIMEOUT after 120 seconds of host CPU time
perl -I../.. ../../tests/userprog/wait-killed.ck tests/userprog/wait-killed tests/userprog/wait-killed.result
FAIL tests/userprog/wait-killed
run: TIMEOUT after 120 seconds of host CPU time
gcc -m32 -c ../../tests/userprog/wait-bad-pid.c -o tests/userprog/wait-bad-pid.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/wait-bad-pid.d
gcc -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/wait-bad-pid.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/wait-bad-pid
pintos -v -k -T 120 --bochs  --filesys-size=2 -p tests/userprog/wait-bad-pid -a wait-bad-pid --swap-size=4 -- -q    -f run wait-bad-pid < /dev/null 2> tests/userprog/wait-bad-pid.errors |tee tests/userprog/wait-bad-pid.output
Copying tests/userprog/wait-bad-pid to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading.........
Kernel command line: -q -f extract run wait-bad-pid
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 13,104 sectors (6 MB), model "BXHD00011", serial "Generic 1234"
hda1: 155 sectors (77 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 100 sectors (50 kB), Pintos scratch (22)
hda4: 8,192 sectors (4 MB), Pintos swap (23)
filesys: using hda2
scratch: using hda3
swap: using hda4
HI
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'wait-bad-pid' into the file system...
Erasing ustar archive...
Executing 'wait-bad-pid':
(wait-bad-pid) begin
(wait-bad-pid) end
wait-bad-pid: exit(0)
Kernel PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c642 0xc00220e6 0xc002221f 0x804a2b9 0x8048734.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 287 ticks
Thread: 49 idle ticks, 205 kernel ticks, 33 user ticks
hda2 (filesys): 62 reads, 204 writes
hda3 (scratch): 99 reads, 2 writes
hda4 (swap): 0 reads, 0 writes
Console: 1450 characters output
Keyboard: 0 keys pressed
Exception: 5 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Aug 30 2016 at 19:39:55
========================================================================
perl -I../.. ../../tests/userprog/wait-bad-pid.ck tests/userprog/wait-bad-pid tests/userprog/wait-bad-pid.result
FAIL tests/userprog/wait-bad-pid
Kernel panic in run: PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c642 0xc00220e6 0xc002221f 0x804a2b9 0x8048734
Translation of call stack:
In kernel.o:
0xc0028cdc: debug_panic (.../../lib/kernel/debug.c:38)
0xc0023a87: block_to_arena (..../../threads/malloc.c:279)
0xc0023b87: free (..../../threads/malloc.c:224)
0xc002e7e4: vm_destory_func (.../build/../../vm/page.c:26)
0xc002a8dd: hash_clear (..../../lib/kernel/hash.c:63)
0xc002a928: hash_destroy (..../../lib/kernel/hash.c:91)
0xc002e7d1: vm_destroy (.../build/../../vm/page.c:65)
0xc002adc3: process_exit (...../userprog/process.c:274)
0xc00215a5: thread_exit (..../../threads/thread.c:334)
0xc002c4e7: create (...../userprog/syscall.c:177)
0xc002c642: syscall_handler (.../../userprog/syscall.c:42)
0xc00220e6: intr_handler (..../threads/interrupt.c:367)
0xc002221f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/wait-bad-pid:
0x0804a2b9: exit (.../../lib/user/syscall.c:74)
0x08048734: random_init (...ild/../../lib/random.c:35)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
gcc -m32 -c ../../tests/userprog/multi-recurse.c -o tests/userprog/multi-recurse.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/multi-recurse.d
gcc -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/multi-recurse.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/multi-recurse
pintos -v -k -T 120 --bochs  --filesys-size=2 -p tests/userprog/multi-recurse -a multi-recurse --swap-size=4 -- -q    -f run 'multi-recurse 15' < /dev/null 2> tests/userprog/multi-recurse.errors |tee tests/userprog/multi-recurse.output
Copying tests/userprog/multi-recurse to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading.........
Kernel command line: -q -f extract run 'multi-recurse 15'
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 13,104 sectors (6 MB), model "BXHD00011", serial "Generic 1234"
hda1: 155 sectors (77 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 112 sectors (56 kB), Pintos scratch (22)
hda4: 8,192 sectors (4 MB), Pintos swap (23)
filesys: using hda2
scratch: using hda3
swap: using hda4
HI
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'multi-recurse' into the file system...
Erasing ustar archive...
Executing 'multi-recurse 15':
(multi-recurse) begin 15
(multi-recurse) exec("multi-recurse 14")
multi-recurse: exit(-1)
Kernel PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c572 0xc002c6d2 0xc00220e6 0xc002221f 0x804a5e2 0x8048120 0x80487bc.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 298 ticks
Thread: 53 idle ticks, 211 kernel ticks, 34 user ticks
hda2 (filesys): 58 reads, 228 writes
hda3 (scratch): 111 reads, 2 writes
hda4 (swap): 0 reads, 0 writes
Console: 1511 characters output
Keyboard: 0 keys pressed
Exception: 4 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Aug 30 2016 at 19:39:55
========================================================================
perl -I../.. ../../tests/userprog/multi-recurse.ck tests/userprog/multi-recurse tests/userprog/multi-recurse.result
FAIL tests/userprog/multi-recurse
Kernel panic in run: PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c572 0xc002c6d2 0xc00220e6 0xc002221f 0x804a5e2 0x8048120 0x80487bc
Translation of call stack:
In kernel.o:
0xc0028cdc: debug_panic (.../../lib/kernel/debug.c:38)
0xc0023a87: block_to_arena (..../../threads/malloc.c:279)
0xc0023b87: free (..../../threads/malloc.c:224)
0xc002e7e4: vm_destory_func (.../build/../../vm/page.c:26)
0xc002a8dd: hash_clear (..../../lib/kernel/hash.c:63)
0xc002a928: hash_destroy (..../../lib/kernel/hash.c:91)
0xc002e7d1: vm_destroy (.../build/../../vm/page.c:65)
0xc002adc3: process_exit (...../userprog/process.c:274)
0xc00215a5: thread_exit (..../../threads/thread.c:334)
0xc002c4e7: create (...../userprog/syscall.c:177)
0xc002c572: check_valid_string (...../userprog/syscall.c:123)
0xc002c6d2: syscall_handler (.../../userprog/syscall.c:52)
0xc00220e6: intr_handler (..../threads/interrupt.c:367)
0xc002221f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/multi-recurse:
0x0804a5e2: exec (.../../lib/user/syscall.c:81)
0x08048120: main (...erprog/multi-recurse.c:25)
0x080487bc: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
gcc -m32 -c ../../tests/userprog/multi-child-fd.c -o tests/userprog/multi-child-fd.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/multi-child-fd.d
gcc -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/multi-child-fd.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/multi-child-fd
gcc -m32 -c ../../tests/userprog/child-close.c -o tests/userprog/child-close.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/child-close.d
gcc -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/child-close.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/child-close
pintos -v -k -T 120 --bochs  --filesys-size=2 -p tests/userprog/multi-child-fd -a multi-child-fd -p ../../tests/userprog/sample.txt -a sample.txt -p tests/userprog/child-close -a child-close --swap-size=4 -- -q    -f run multi-child-fd < /dev/null 2> tests/userprog/multi-child-fd.errors |tee tests/userprog/multi-child-fd.output
Copying tests/userprog/multi-child-fd to scratch partition...
Copying ../../tests/userprog/sample.txt to scratch partition...
Copying tests/userprog/child-close to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading.........
Kernel command line: -q -f extract run multi-child-fd
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 13,104 sectors (6 MB), model "BXHD00011", serial "Generic 1234"
hda1: 155 sectors (77 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 213 sectors (106 kB), Pintos scratch (22)
hda4: 8,192 sectors (4 MB), Pintos swap (23)
filesys: using hda2
scratch: using hda3
swap: using hda4
HI
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'multi-child-fd' into the file system...
Putting 'sample.txt' into the file system...
Putting 'child-close' into the file system...
Erasing ustar archive...
Executing 'multi-child-fd':
(multi-child-fd) begin
(multi-child-fd) open "sample.txt"
multi-child-fd: exit(-1)
Kernel PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c572 0xc002c6d2 0xc00220e6 0xc002221f 0x804a202 0x8048100 0x8048174 0x80487bc.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 428 ticks
Thread: 76 idle ticks, 312 kernel ticks, 40 user ticks
hda2 (filesys): 119 reads, 434 writes
hda3 (scratch): 212 reads, 2 writes
hda4 (swap): 0 reads, 0 writes
Console: 1602 characters output
Keyboard: 0 keys pressed
Exception: 5 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Aug 30 2016 at 19:39:55
========================================================================
perl -I../.. ../../tests/userprog/multi-child-fd.ck tests/userprog/multi-child-fd tests/userprog/multi-child-fd.result
FAIL tests/userprog/multi-child-fd
Kernel panic in run: PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c572 0xc002c6d2 0xc00220e6 0xc002221f 0x804a202 0x8048100 0x8048174 0x80487bc
Translation of call stack:
In kernel.o:
0xc0028cdc: debug_panic (.../../lib/kernel/debug.c:38)
0xc0023a87: block_to_arena (..../../threads/malloc.c:279)
0xc0023b87: free (..../../threads/malloc.c:224)
0xc002e7e4: vm_destory_func (.../build/../../vm/page.c:26)
0xc002a8dd: hash_clear (..../../lib/kernel/hash.c:63)
0xc002a928: hash_destroy (..../../lib/kernel/hash.c:91)
0xc002e7d1: vm_destroy (.../build/../../vm/page.c:65)
0xc002adc3: process_exit (...../userprog/process.c:274)
0xc00215a5: thread_exit (..../../threads/thread.c:334)
0xc002c4e7: create (...../userprog/syscall.c:177)
0xc002c572: check_valid_string (...../userprog/syscall.c:123)
0xc002c6d2: syscall_handler (.../../userprog/syscall.c:52)
0xc00220e6: intr_handler (..../threads/interrupt.c:367)
0xc002221f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/multi-child-fd:
0x0804a202: exec (.../../lib/user/syscall.c:81)
0x08048100: test_main (...rprog/multi-child-fd.c:22)
0x08048174: main (...ild/../../tests/main.c:13)
0x080487bc: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
gcc -m32 -c ../../tests/userprog/rox-simple.c -o tests/userprog/rox-simple.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/rox-simple.d
gcc -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/rox-simple.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/rox-simple
pintos -v -k -T 120 --bochs  --filesys-size=2 -p tests/userprog/rox-simple -a rox-simple --swap-size=4 -- -q    -f run rox-simple < /dev/null 2> tests/userprog/rox-simple.errors |tee tests/userprog/rox-simple.output
Copying tests/userprog/rox-simple to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading.........
Kernel command line: -q -f extract run rox-simple
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 13,104 sectors (6 MB), model "BXHD00011", serial "Generic 1234"
hda1: 155 sectors (77 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 101 sectors (50 kB), Pintos scratch (22)
hda4: 8,192 sectors (4 MB), Pintos swap (23)
filesys: using hda2
scratch: using hda3
swap: using hda4
HI
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'rox-simple' into the file system...
Erasing ustar archive...
Executing 'rox-simple':
(rox-simple) begin
(rox-simple) open "rox-simple"
(rox-simple) read "rox-simple"
rox-simple: exit(-1)
Kernel PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c5ad 0xc002c786 0xc00220e6 0xc002221f 0x804a26f 0x80480f5 0x8048170 0x80487bc.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 294 ticks
Thread: 51 idle ticks, 203 kernel ticks, 40 user ticks
hda2 (filesys): 65 reads, 206 writes
hda3 (scratch): 100 reads, 2 writes
hda4 (swap): 0 reads, 0 writes
Console: 1516 characters output
Keyboard: 0 keys pressed
Exception: 5 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Aug 30 2016 at 19:39:55
========================================================================
perl -I../.. ../../tests/userprog/rox-simple.ck tests/userprog/rox-simple tests/userprog/rox-simple.result
FAIL tests/userprog/rox-simple
Kernel panic in run: PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c5ad 0xc002c786 0xc00220e6 0xc002221f 0x804a26f 0x80480f5 0x8048170 0x80487bc
Translation of call stack:
In kernel.o:
0xc0028cdc: debug_panic (.../../lib/kernel/debug.c:38)
0xc0023a87: block_to_arena (..../../threads/malloc.c:279)
0xc0023b87: free (..../../threads/malloc.c:224)
0xc002e7e4: vm_destory_func (.../build/../../vm/page.c:26)
0xc002a8dd: hash_clear (..../../lib/kernel/hash.c:63)
0xc002a928: hash_destroy (..../../lib/kernel/hash.c:91)
0xc002e7d1: vm_destroy (.../build/../../vm/page.c:65)
0xc002adc3: process_exit (...../userprog/process.c:274)
0xc00215a5: thread_exit (..../../threads/thread.c:334)
0xc002c4e7: create (...../userprog/syscall.c:177)
0xc002c5ad: check_valid_buffer (...../userprog/syscall.c:110)
0xc002c786: syscall_handler (.../../userprog/syscall.c:66)
0xc00220e6: intr_handler (..../threads/interrupt.c:367)
0xc002221f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/rox-simple:
0x0804a26f: read (...../lib/user/syscall.c:117)
0x080480f5: test_main (.../userprog/rox-simple.c:15)
0x08048170: main (...ild/../../tests/main.c:13)
0x080487bc: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
gcc -m32 -c ../../tests/userprog/rox-child.c -o tests/userprog/rox-child.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/rox-child.d
gcc -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/rox-child.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/rox-child
gcc -m32 -c ../../tests/userprog/child-rox.c -o tests/userprog/child-rox.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/child-rox.d
gcc -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/child-rox.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/child-rox
pintos -v -k -T 120 --bochs  --filesys-size=2 -p tests/userprog/rox-child -a rox-child -p tests/userprog/child-rox -a child-rox --swap-size=4 -- -q    -f run rox-child < /dev/null 2> tests/userprog/rox-child.errors |tee tests/userprog/rox-child.output
Copying tests/userprog/rox-child to scratch partition...
Copying tests/userprog/child-rox to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading.........
Kernel command line: -q -f extract run rox-child
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 13,104 sectors (6 MB), model "BXHD00011", serial "Generic 1234"
hda1: 155 sectors (77 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 213 sectors (106 kB), Pintos scratch (22)
hda4: 8,192 sectors (4 MB), Pintos swap (23)
filesys: using hda2
scratch: using hda3
swap: using hda4
HI
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'rox-child' into the file system...
Putting 'child-rox' into the file system...
Erasing ustar archive...
Executing 'rox-child':
(rox-child) begin
(rox-child) open "child-rox"
(rox-child) read "child-rox"
rox-child: exit(-1)
Kernel PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c5ad 0xc002c786 0xc00220e6 0xc002221f 0x804a32f 0x80480f6 0x8048234 0x804887c.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 405 ticks
Thread: 74 idle ticks, 288 kernel ticks, 43 user ticks
hda2 (filesys): 92 reads, 432 writes
hda3 (scratch): 212 reads, 2 writes
hda4 (swap): 0 reads, 0 writes
Console: 1552 characters output
Keyboard: 0 keys pressed
Exception: 5 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Aug 30 2016 at 19:39:55
========================================================================
perl -I../.. ../../tests/userprog/rox-child.ck tests/userprog/rox-child tests/userprog/rox-child.result
FAIL tests/userprog/rox-child
Kernel panic in run: PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c5ad 0xc002c786 0xc00220e6 0xc002221f 0x804a32f 0x80480f6 0x8048234 0x804887c
Translation of call stack:
In kernel.o:
0xc0028cdc: debug_panic (.../../lib/kernel/debug.c:38)
0xc0023a87: block_to_arena (..../../threads/malloc.c:279)
0xc0023b87: free (..../../threads/malloc.c:224)
0xc002e7e4: vm_destory_func (.../build/../../vm/page.c:26)
0xc002a8dd: hash_clear (..../../lib/kernel/hash.c:63)
0xc002a928: hash_destroy (..../../lib/kernel/hash.c:91)
0xc002e7d1: vm_destroy (.../build/../../vm/page.c:65)
0xc002adc3: process_exit (...../userprog/process.c:274)
0xc00215a5: thread_exit (..../../threads/thread.c:334)
0xc002c4e7: create (...../userprog/syscall.c:177)
0xc002c5ad: check_valid_buffer (...../userprog/syscall.c:110)
0xc002c786: syscall_handler (.../../userprog/syscall.c:66)
0xc00220e6: intr_handler (..../threads/interrupt.c:367)
0xc002221f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/rox-child:
0x0804a32f: read (...../lib/user/syscall.c:117)
0x080480f6: test_main (...userprog/rox-child.inc:17)
0x08048234: main (...ild/../../tests/main.c:13)
0x0804887c: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
gcc -m32 -c ../../tests/userprog/rox-multichild.c -o tests/userprog/rox-multichild.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/rox-multichild.d
gcc -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/rox-multichild.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/rox-multichild
pintos -v -k -T 120 --bochs  --filesys-size=2 -p tests/userprog/rox-multichild -a rox-multichild -p tests/userprog/child-rox -a child-rox --swap-size=4 -- -q    -f run rox-multichild < /dev/null 2> tests/userprog/rox-multichild.errors |tee tests/userprog/rox-multichild.output
Copying tests/userprog/rox-multichild to scratch partition...
Copying tests/userprog/child-rox to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading.........
Kernel command line: -q -f extract run rox-multichild
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 13,104 sectors (6 MB), model "BXHD00011", serial "Generic 1234"
hda1: 155 sectors (77 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 213 sectors (106 kB), Pintos scratch (22)
hda4: 8,192 sectors (4 MB), Pintos swap (23)
filesys: using hda2
scratch: using hda3
swap: using hda4
HI
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'rox-multichild' into the file system...
Putting 'child-rox' into the file system...
Erasing ustar archive...
Executing 'rox-multichild':
(rox-multichild) begin
(rox-multichild) open "child-rox"
(rox-multichild) read "child-rox"
rox-multichild: exit(-1)
Kernel PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c5ad 0xc002c786 0xc00220e6 0xc002221f 0x804a32f 0x80480f6 0x8048234 0x804887c.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 408 ticks
Thread: 71 idle ticks, 292 kernel ticks, 45 user ticks
hda2 (filesys): 92 reads, 432 writes
hda3 (scratch): 212 reads, 2 writes
hda4 (swap): 0 reads, 0 writes
Console: 1587 characters output
Keyboard: 0 keys pressed
Exception: 5 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Aug 30 2016 at 19:39:55
========================================================================
perl -I../.. ../../tests/userprog/rox-multichild.ck tests/userprog/rox-multichild tests/userprog/rox-multichild.result
FAIL tests/userprog/rox-multichild
Kernel panic in run: PANIC at ../../threads/malloc.c:278 in block_to_arena(): assertion `a->desc == NULL || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0' failed.
Call stack: 0xc0028cdc 0xc0023a87 0xc0023b87 0xc002e7e4 0xc002a8dd 0xc002a928 0xc002e7d1 0xc002adc3 0xc00215a5 0xc002c4e7 0xc002c5ad 0xc002c786 0xc00220e6 0xc002221f 0x804a32f 0x80480f6 0x8048234 0x804887c
Translation of call stack:
In kernel.o:
0xc0028cdc: debug_panic (.../../lib/kernel/debug.c:38)
0xc0023a87: block_to_arena (..../../threads/malloc.c:279)
0xc0023b87: free (..../../threads/malloc.c:224)
0xc002e7e4: vm_destory_func (.../build/../../vm/page.c:26)
0xc002a8dd: hash_clear (..../../lib/kernel/hash.c:63)
0xc002a928: hash_destroy (..../../lib/kernel/hash.c:91)
0xc002e7d1: vm_destroy (.../build/../../vm/page.c:65)
0xc002adc3: process_exit (...../userprog/process.c:274)
0xc00215a5: thread_exit (..../../threads/thread.c:334)
0xc002c4e7: create (...../userprog/syscall.c:177)
0xc002c5ad: check_valid_buffer (...../userprog/syscall.c:110)
0xc002c786: syscall_handler (.../../userprog/syscall.c:66)
0xc00220e6: intr_handler (..../threads/interrupt.c:367)
0xc002221f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/rox-multichild:
0x0804a32f: read (...../lib/user/syscall.c:117)
0x080480f6: test_main (...userprog/rox-child.inc:17)
0x08048234: main (...ild/../../tests/main.c:13)
0x0804887c: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
gcc -m32 -c ../../tests/userprog/bad-read.c -o tests/userprog/bad-read.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/bad-read.d
gcc -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/bad-read.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/bad-read
pintos -v -k -T 120 --bochs  --filesys-size=2 -p tests/userprog/bad-read -a bad-read --swap-size=4 -- -q    -f run bad-read < /dev/null 2> tests/userprog/bad-read.errors |tee tests/userprog/bad-read.output
Copying tests/userprog/bad-read to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading.........
Kernel command line: -q -f extract run bad-read
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 13,104 sectors (6 MB), model "BXHD00011", serial "Generic 1234"
hda1: 155 sectors (77 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 100 sectors (50 kB), Pintos scratch (22)
hda4: 8,192 sectors (4 MB), Pintos swap (23)
filesys: using hda2
scratch: using hda3
swap: using hda4
HI
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'bad-read' into the file system...
Erasing ustar archive...
Executing 'bad-read':
(bad-read) begin
========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Aug 30 2016 at 19:39:55
========================================================================

TIMEOUT after 122 seconds of wall-clock time - load average: 1.05, 0.96, 0.65
perl -I../.. ../../tests/userprog/bad-read.ck tests/userprog/bad-read tests/userprog/bad-read.result
FAIL tests/userprog/bad-read
run: TIMEOUT after 122 seconds of wall-clock time - load average: 1.05, 0.96, 0.65
gcc -m32 -c ../../tests/userprog/bad-write.c -o tests/userprog/bad-write.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/bad-write.d
gcc -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/bad-write.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/bad-write
pintos -v -k -T 120 --bochs  --filesys-size=2 -p tests/userprog/bad-write -a bad-write --swap-size=4 -- -q    -f run bad-write < /dev/null 2> tests/userprog/bad-write.errors |tee tests/userprog/bad-write.output
Copying tests/userprog/bad-write to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading.........
Kernel command line: -q -f extract run bad-write
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 13,104 sectors (6 MB), model "BXHD00011", serial "Generic 1234"
hda1: 155 sectors (77 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 100 sectors (50 kB), Pintos scratch (22)
hda4: 8,192 sectors (4 MB), Pintos swap (23)
filesys: using hda2
scratch: using hda3
swap: using hda4
HI
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'bad-write' into the file system...
Erasing ustar archive...
Executing 'bad-write':
(bad-write) begin

TIMEOUT after 120 seconds of host CPU time
perl -I../.. ../../tests/userprog/bad-write.ck tests/userprog/bad-write tests/userprog/bad-write.result
FAIL tests/userprog/bad-write
run: TIMEOUT after 120 seconds of host CPU time
gcc -m32 -c ../../tests/userprog/bad-read2.c -o tests/userprog/bad-read2.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/bad-read2.d
gcc -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/bad-read2.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/bad-read2
pintos -v -k -T 120 --bochs  --filesys-size=2 -p tests/userprog/bad-read2 -a bad-read2 --swap-size=4 -- -q    -f run bad-read2 < /dev/null 2> tests/userprog/bad-read2.errors |tee tests/userprog/bad-read2.output
Copying tests/userprog/bad-read2 to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading.........
Kernel command line: -q -f extract run bad-read2
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 13,104 sectors (6 MB), model "BXHD00011", serial "Generic 1234"
hda1: 155 sectors (77 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 100 sectors (50 kB), Pintos scratch (22)
hda4: 8,192 sectors (4 MB), Pintos swap (23)
filesys: using hda2
scratch: using hda3
swap: using hda4
HI
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'bad-read2' into the file system...
Erasing ustar archive...
Executing 'bad-read2':
(bad-read2) begin
========================================================================
                       Bochs x86 Emulator 2.6.8
                Built from SVN snapshot on May 3, 2015
                  Compiled on Aug 30 2016 at 19:39:55
========================================================================

TIMEOUT after 123 seconds of wall-clock time - load average: 1.26, 1.19, 0.81
perl -I../.. ../../tests/userprog/bad-read2.ck tests/userprog/bad-read2 tests/userprog/bad-read2.result
FAIL tests/userprog/bad-read2
run: TIMEOUT after 123 seconds of wall-clock time - load average: 1.26, 1.19, 0.81
gcc -m32 -c ../../tests/userprog/bad-write2.c -o tests/userprog/bad-write2.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/bad-write2.d
gcc -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/bad-write2.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/bad-write2
pintos -v -k -T 120 --bochs  --filesys-size=2 -p tests/userprog/bad-write2 -a bad-write2 --swap-size=4 -- -q    -f run bad-write2 < /dev/null 2> tests/userprog/bad-write2.errors |tee tests/userprog/bad-write2.output
Copying tests/userprog/bad-write2 to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading.........
Kernel command line: -q -f extract run bad-write2
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 13,104 sectors (6 MB), model "BXHD00011", serial "Generic 1234"
hda1: 155 sectors (77 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 100 sectors (50 kB), Pintos scratch (22)
hda4: 8,192 sectors (4 MB), Pintos swap (23)
filesys: using hda2
scratch: using hda3
swap: using hda4
HI
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'bad-write2' into the file system...
Erasing ustar archive...
Executing 'bad-write2':
(bad-write2) begin

TIMEOUT after 120 seconds of host CPU time
perl -I../.. ../../tests/userprog/bad-write2.ck tests/userprog/bad-write2 tests/userprog/bad-write2.result
FAIL tests/userprog/bad-write2
run: TIMEOUT after 120 seconds of host CPU time
gcc -m32 -c ../../tests/userprog/bad-jump.c -o tests/userprog/bad-jump.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/bad-jump.d
gcc -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/bad-jump.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/bad-jump
pintos -v -k -T 120 --bochs  --filesys-size=2 -p tests/userprog/bad-jump -a bad-jump --swap-size=4 -- -q    -f run bad-jump < /dev/null 2> tests/userprog/bad-jump.errors |tee tests/userprog/bad-jump.output
Copying tests/userprog/bad-jump to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading.........
Kernel command line: -q -f extract run bad-jump
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 13,104 sectors (6 MB), model "BXHD00011", serial "Generic 1234"
hda1: 155 sectors (77 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 100 sectors (50 kB), Pintos scratch (22)
hda4: 8,192 sectors (4 MB), Pintos swap (23)
filesys: using hda2
scratch: using hda3
swap: using hda4
HI
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'bad-jump' into the file system...
Erasing ustar archive...
Executing 'bad-jump':
(bad-jump) begin

TIMEOUT after 120 seconds of host CPU time
perl -I../.. ../../tests/userprog/bad-jump.ck tests/userprog/bad-jump tests/userprog/bad-jump.result
FAIL tests/userprog/bad-jump
run: TIMEOUT after 120 seconds of host CPU time
gcc -m32 -c ../../tests/userprog/bad-jump2.c -o tests/userprog/bad-jump2.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/bad-jump2.d
gcc -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/bad-jump2.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/bad-jump2
pintos -v -k -T 120 --bochs  --filesys-size=2 -p tests/userprog/bad-jump2 -a bad-jump2 --swap-size=4 -- -q    -f run bad-jump2 < /dev/null 2> tests/userprog/bad-jump2.errors |tee tests/userprog/bad-jump2.output
Copying tests/userprog/bad-jump2 to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading.........
Kernel command line: -q -f extract run bad-jump2
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 13,104 sectors (6 MB), model "BXHD00011", serial "Generic 1234"
hda1: 155 sectors (77 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 100 sectors (50 kB), Pintos scratch (22)
hda4: 8,192 sectors (4 MB), Pintos swap (23)
filesys: using hda2
scratch: using hda3
swap: using hda4
HI
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'bad-jump2' into the file system...
Erasing ustar archive...
Executing 'bad-jump2':
(bad-jump2) begin

TIMEOUT after 120 seconds of host CPU time
perl -I../.. ../../tests/userprog/bad-jump2.ck tests/userprog/bad-jump2 tests/userprog/bad-jump2.result
FAIL tests/userprog/bad-jump2
run: TIMEOUT after 120 seconds of host CPU time
gcc -m32 -c ../../tests/vm/pt-grow-stack.c -o tests/vm/pt-grow-stack.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/vm/pt-grow-stack.d
gcc -m32 -c ../../tests/arc4.c -o tests/arc4.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/arc4.d
gcc -m32 -c ../../tests/cksum.c -o tests/cksum.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/cksum.d
gcc -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/vm/pt-grow-stack.o tests/arc4.o tests/cksum.o tests/lib.o tests/main.o lib/user/entry.o libc.a -o tests/vm/pt-grow-stack
pintos -v -k -T 120 --bochs  --filesys-size=2 -p tests/vm/pt-grow-stack -a pt-grow-stack --swap-size=4 -- -q    -f run pt-grow-stack < /dev/null 2> tests/vm/pt-grow-stack.errors |tee tests/vm/pt-grow-stack.output
Copying tests/vm/pt-grow-stack to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading.........
Kernel command line: -q -f extract run pt-grow-stack
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 13,104 sectors (6 MB), model "BXHD00011", serial "Generic 1234"
hda1: 155 sectors (77 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 109 sectors (54 kB), Pintos scratch (22)
hda4: 8,192 sectors (4 MB), Pintos swap (23)
filesys: using hda2
scratch: using hda3
swap: using hda4
HI
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'pt-grow-stack' into the file system...
Erasing ustar archive...
Executing 'pt-grow-stack':
(pt-grow-stack) begin
